/*!
 * surveyjs - Survey JavaScript library v1.11.2
 * Copyright (c) 2015-2024 Devsoft Baltic OÃœ  - http://surveyjs.io/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("knockout"),require("survey-core")):"function"==typeof define&&define.amd?define("survey-knockout-ui",["knockout","survey-core"],t):"object"==typeof exports?exports["survey-knockout-ui"]=t(require("knockout"),require("survey-core")):e.SurveyKnockout=t(e.ko,e.Survey)}(this,(function(e,t){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=100)}([function(t,n){t.exports=e},function(e,n){e.exports=t},function(e,t,n){e.exports=n(3)+"\n"+n(4)+"\n"+n(5)+"\n"+n(6)+"\n"+n(7)+"\n"+n(8)+"\n"+n(9)+"\n"+n(10)+"\n"+n(11)+"\n"+n(12)+"\n"+n(13)+"\n"+n(14)+"\n"+n(15)+"\n"+n(16)+"\n"+n(17)+"\n"+n(18)+"\n"+n(19)+"\n"+n(20)+"\n"+n(21)+"\n"+n(22)+"\n"+n(23)+"\n"+n(24)+"\n"+n(25)+"\n"+n(26)+"\n"+n(27)+"\n"+n(28)+"\n"+n(29)+"\n"+n(30)+"\n"+n(31)+"\n"+n(32)+"\n"+n(33)+"\n"+n(34)+"\n"+n(35)+"\n"+n(36)+"\n"+n(37)+"\n"+n(38)+"\n"+n(39)+"\n"+n(40)+"\n"+n(41)+"\n"+n(42)},function(e,t){e.exports='<script type="text/html" id="survey-comment">\n  \x3c!--ko if: !question.isReadOnlyRenderDiv() --\x3e\n<textarea data-bind="attr: { id: question.commentId, maxLength: question.getOthersMaxLength(), \'aria-required\': question.ariaRequired || question.a11y_input_ariaRequired, \'aria-label\': question.ariaLabel || question.a11y_input_ariaLabel, placeholder: question.renderedCommentPlaceholder }, \n        event: { input: function(s, e) { $data.question.onCommentInput(e); } }, \n        value: $data.question.comment, \n        visible: $data.visible,\n        disable: $data.question.isInputReadOnly,\n        style: { resize: question.resizeStyle },\n        css: $data.question.cssClasses.other"></textarea>\n\x3c!--/ko--\x3e\n\n\x3c!--ko if: question.isReadOnlyRenderDiv() --\x3e\n<div data-bind="text: question.comment"></div>\n\x3c!--/ko--\x3e\n<\/script>\n<script type="text/html" id="survey-other">\n  \x3c!--ko if: !question.isReadOnlyRenderDiv() --\x3e\n<textarea data-bind="attr: { id: question.otherId, maxLength: question.getOthersMaxLength(), \'aria-required\': question.ariaRequired || question.a11y_input_ariaRequired, \'aria-label\': question.ariaLabel || question.a11y_input_ariaLabel, placeholder: question.otherPlaceholder }, \n        event: { input: function(s, e) { $data.question.onOtherValueInput(e); } }, \n        value: $data.question.otherValue, \n        visible: $data.visible,\n        disable: $data.question.isInputReadOnly,\n        style: { resize: question.resizeStyle },\n        css: $data.question.cssClasses.other"></textarea>\n\x3c!--/ko--\x3e\n\n\x3c!--ko if: question.isReadOnlyRenderDiv() --\x3e\n<div data-bind="text: question.otherValue"></div>\n\x3c!--/ko--\x3e\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-flowpanel">\n  <div data-bind="style: { flexBasis: renderWidth, flexGrow: 1, flexShrink: 1, width: renderWidth, minWidth: $data.minWidth, maxWidth: $data.maxWidth }, attr: { id: id }, css: cssClasses.panel.container">\n      <h4 data-bind="visible: (processedTitle.length > 0), css: question.cssTitle">\n          \x3c!-- ko template: { name: \'survey-string\', data: locTitle } --\x3e\n          \x3c!-- /ko --\x3e\n      </h4>\n      <div data-bind="css: cssClasses.panel.description">\n          \x3c!-- ko template: { name: \'survey-string\', data: locDescription } --\x3e\n          \x3c!-- /ko --\x3e\n      </div>\n      <div data-bind="style: { paddingLeft: innerPaddingLeft }"></div>\n      <f-panel params="question: question" data-bind="attr: { contenteditable : question.isDesignMode, placeHolder: question.placeHolder }"></f-panel>\n  </div>\n<\/script>\n<script type="text/html" id="survey-flowpanel-question">\n  \x3c!-- ko with: $parent.question.getQuestionByName($data) --\x3e\n    \x3c!-- ko template: { name: koElementType(), data: $data, as: \'question\', afterRender: parent.koElementAfterRender } --\x3e\x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n<\/script>\n'},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-header\">\n  \x3c!-- ko if: renderedHasHeader --\x3e\n<div data-bind=\"css: css.header\">\n  \x3c!-- ko if: isLogoBefore --\x3e\n  \x3c!-- ko component: { name: getElementWrapperComponentName($data, 'logo-image'), params: getElementWrapperComponentData($data, 'logo-image') } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n\n  \x3c!-- ko if: renderedHasTitle --\x3e\n  <div data-bind=\"css: css.headerText, style: { maxWidth: titleMaxWidth }\">\n    \x3c!-- ko component: { name: 'survey-element-title', params: {element: $data } } --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: renderedHasDescription --\x3e\n    <div data-bind=\"css: css.description\">\n      \x3c!-- ko template: { name: 'survey-string', data: locDescription } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n\n  \x3c!-- ko if: isLogoAfter --\x3e\n  \x3c!-- ko component: { name: getElementWrapperComponentName($data, 'logo-image'), params: getElementWrapperComponentData($data, 'logo-image') } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  <div data-bind=\"css: css.headerClose\"></div>\n</div>\n\x3c!-- /ko --\x3e\n<\/script>"},function(e,t){e.exports='<script type="text/html" id="survey-content">\n    \x3c!-- ko template: { name: "survey-content-template", afterRender: $data.implementor.koEventAfterRender } --\x3e\n    \x3c!-- /ko --\x3e\n<\/script>\n\n<script type="text/html" id="survey-content-template">\n  <div data-bind="css: rootCss, elementStyle: themeVariables">\n    \x3c!-- ko if: needRenderIcons --\x3e\n      \x3c!-- ko component: { name: \'sv-svg-bundle\'} --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    <div data-bind="css: wrapperFormCss">\n      \x3c!-- ko if: !!renderBackgroundImage --\x3e\n      <div data-bind="css: css.rootBackgroundImage, elementStyle: backgroundImageStyle"></div>\n      \x3c!-- /ko --\x3e\n      <form onsubmit="return false;">\n          <div class="sv_custom_header" data-bind="visible: !hasLogo"></div>\n          <div data-bind="css: containerCss">\n              \x3c!-- ko if: headerView === \'basic\' --\x3e\n              \x3c!-- ko template: { name: koTitleTemplate, afterRender: koAfterRenderHeader } --\x3e\n              \x3c!-- /ko --\x3e\n              \x3c!-- /ko --\x3e\n              \x3c!-- ko component: { name: "sv-components-container", params: { survey: $data, container: "header", needRenderWrapper: false } } --\x3e\x3c!-- /ko --\x3e\n              \x3c!-- ko if: isShowingPage --\x3e\n              <div data-bind="css: $data.bodyContainerCss">\n                  \x3c!-- ko component: { name: "sv-components-container", params: { survey: $data, container: "left" } } --\x3e\x3c!-- /ko --\x3e\n                  <div class="sv-components-column sv-components-column--expandable">\n                    \x3c!-- ko component: { name: "sv-components-container", params: { survey: $data, container: "center" } } --\x3e\x3c!-- /ko --\x3e\n                    <div data-bind="css: bodyCss, style:{maxWidth: renderedWidth}, attr: { id: activePage ? activePage.id : \'\' }">\n                          \x3c!-- ko component: { name: "sv-components-container", params: { survey: $data, container: "contentTop" } } --\x3e\x3c!-- /ko --\x3e\n                          \x3c!-- ko if: activePage --\x3e\n                          \x3c!-- ko template: { name: \'survey-page\', data: activePage, afterRender: koAfterRenderPage } --\x3e\n                          \x3c!-- /ko --\x3e\n                          \x3c!-- ko if: activePage.rows.length == 0 && $data.emptyPageTemplate --\x3e\n                          \x3c!-- ko template: { name: emptyPageTemplate, data: $data.emptyPageTemplateData || $data } --\x3e\n                          \x3c!-- /ko --\x3e\n                          \x3c!-- /ko --\x3e\n                          \x3c!-- /ko --\x3e\n                          \x3c!-- ko component: { name: "sv-components-container", params: { survey: $data, container: "contentBottom" } } --\x3e\x3c!-- /ko --\x3e\n                    </div>\n                  </div>\n                  \x3c!-- ko component: { name: "sv-components-container", params: { survey: $data, container: "right" } } --\x3e\x3c!-- /ko --\x3e\n              </div>\n              \x3c!-- /ko --\x3e\n              \x3c!-- ko component: { name: "sv-components-container", params: { survey: $data, container: "footer", needRenderWrapper: false } } --\x3e\x3c!-- /ko --\x3e\n              \x3c!-- ko if: state == "completed" && showCompletedPage --\x3e\n              <div data-bind="html: koProcessedCompletedHtml, css: completedCss"></div>\n              \x3c!-- ko component: { name: "sv-components-container", params: { survey: $data, container: "completePage", needRenderWrapper: false } } --\x3e\x3c!-- /ko --\x3e\n              \x3c!-- /ko --\x3e\n              \x3c!-- ko if: state == "completedbefore" --\x3e\n              <div data-bind="html: locCompletedBeforeHtml.koRenderedHtml, css: completedBeforeCss"></div>\n              \x3c!-- /ko --\x3e\n              \x3c!-- ko if: state == "loading" --\x3e\n              <div data-bind="html: locLoadingHtml.koRenderedHtml, css: loadingBodyCss"></div>\n              \x3c!-- /ko --\x3e\n              \x3c!-- ko if: state == "empty" --\x3e\n              <div data-bind="text:emptySurveyText, css: css.bodyEmpty"></div>\n              \x3c!-- /ko --\x3e\n          </div>\n      </form>\n      \x3c!-- ko if: showBrandInfo --\x3e\n      <sv-brand-info></sv-brand-info>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko component: { name: \'sv-notifier\', params: { notifier: notifier } } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n  </div>\n<\/script>'},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-page\">\n  <div data-bind=\"css: cssRoot\">\n    \x3c!-- ko component: { name: 'survey-element-title', params: {element: $data } } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- ko if: _showDescription--\x3e\n    <div\n      data-bind=\"visible: data.showPageTitles, css: cssClasses.page.description\"\n    >\n      \x3c!-- ko template: { name: 'survey-string', data: locDescription } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko template: { name: 'survey-question-errors', data: $data, as: 'question' } --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko template: { name: 'survey-rows', data: $data} --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n<\/script>\n"},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-panel\">\n  \x3c!-- ko if: $data.getIsContentVisible() --\x3e\n  <div\n    data-bind=\"attr: { id: id }, css: $data.getContainerCss(), event: {focusin: focusIn}\"\n  >\n    \x3c!-- ko if: showErrorsAbovePanel--\x3e\n      \x3c!-- ko template: { name: 'survey-question-errors', data: $data } --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: hasDescription || hasTitle  --\x3e\n        \x3c!--ko template: { name: 'survey-question-title', data: $data  } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko ifnot: showErrorsAbovePanel--\x3e\n      \x3c!-- ko template: { name: 'survey-question-errors', data: $data } --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: renderedIsExpanded --\x3e\n    <div\n      data-bind=\"style: { paddingLeft: innerPaddingLeft }, css: cssClasses.panel.content, attr: {id:contentId}\"\n    >\n      \x3c!-- ko template: { name: 'survey-rows', data: $data} --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko component: { name: 'sv-action-bar', params: { model: getFooterToolbar() } } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n<\/script>\n"},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-rows\">\n  \x3c!-- ko foreach: { data: visibleRows, as: 'row' } --\x3e\n      \x3c!-- ko component: { name: $parent.survey.getRowWrapperComponentName(row), params: { componentData:  $parent.survey.getRowWrapperComponentData(row), templateData: { name: 'survey-row', data: row } } } --\x3e\n      \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n<\/script>"},function(e,t){e.exports='<script type="text/html" id="survey-row">\n  <div data-bind="css: row.getRowCss()">\n    \x3c!-- ko template: { name: "survey-row-content", afterRender: row.rowAfterRender } --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n<\/script>\n<script type="text/html" id="survey-row-content">\n\x3c!-- ko foreach: { data: row.visibleElements, as: \'question\', afterRender: row.koAfterRender } --\x3e\n  <div data-bind="css: question.cssClasses.questionWrapper, style: $data.rootStyle">\n  \x3c!-- ko if: row.isNeedRender --\x3e\n    \x3c!-- ko component: { name: row.panel.survey.getElementWrapperComponentName(question), params: { componentData:  row.panel.survey.getElementWrapperComponentData(question), templateData: { name: question.koElementType, data: question, afterRender: $parent.koElementAfterRender } } } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: !row.isNeedRender && question.skeletonComponentName --\x3e\n    \x3c!-- ko component: { name: question.skeletonComponentName, params: { element: question } } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  </div>\n\x3c!-- /ko --\x3e\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-string">\n    \x3c!-- ko component: { name: renderAs, params: { locString: renderAsData } } --\x3e\n    \x3c!-- /ko --\x3e\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="survey-timerpanel">\n    \x3c!-- ko if: isRunning && showTimerAsClock --\x3e\n    <div data-bind="css: rootCss">\n        \x3c!-- ko if: showProgress --\x3e\n        <svg data-bind="css: getProgressCss(), style: { strokeDasharray: 440, strokeDashoffset: -440 * progress }">\n            <use data-bind="attr:{\'xlink:href\': \'#icon-timercircle\'}" xlink:href=\'\'></use>\n        </svg>\n        \x3c!-- /ko --\x3e\n        <div data-bind="css: textContainerCss">\n            <span data-bind="css: majorTextCss, text: clockMajorText"></span>\n            \x3c!-- ko if: !!minorTextCss --\x3e\n            <span data-bind="css: minorTextCss, text: clockMinorText"></span>\n            \x3c!-- /ko --\x3e\n        </div>\n    </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: isRunning && !showTimerAsClock --\x3e\n    <div data-bind="css: survey.getCss().timerRoot, text: text"></div>\n    \x3c!--/ko --\x3e\n<\/script>\n'},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question\">\n<div data-bind=\"css: question.getRootCss(), style: question.getRootStyle(), attr: { id: question.id, 'data-name': question.name, role: question.ariaRole, 'aria-required': question.ariaRequired, 'aria-invalid': question.ariaInvalid, 'aria-labelledby': question.ariaLabelledBy, 'aria-describedby':question.ariaDescribedBy, 'aria-expanded': question.ariaExpanded}\">\n  \x3c!-- ko if: question.showErrorsAboveQuestion --\x3e\n    \x3c!-- ko template: { name: 'survey-question-errors', data: question } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.hasTitleOnLeftTop --\x3e\n    \x3c!--ko template: { name: 'survey-question-title', data: question  } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko component: { name: question.survey.getQuestionContentWrapperComponentName(question), params: { componentData:  question.survey.getElementWrapperComponentData(question), templateData: { name: 'survey-question-content', data: question } } } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.hasTitleOnBottom --\x3e\n    \x3c!--ko template: { name: 'survey-question-title', data: question  } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.showErrorsBelowQuestion --\x3e\n    \x3c!-- ko template: { name: 'survey-question-errors', data: question } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n</div>\n<\/script>\n"},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question-content\">\n<div data-bind=\"visible: question.renderedIsExpanded, css: question.cssContent, event: {focusin: question.focusIn }\" role=\"presentation\">\n  \x3c!-- ko if: question.showErrorOnTop --\x3e\n    \x3c!-- ko template: { name: 'survey-question-errors', data: question } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.isDefaultRendering() --\x3e\n    \x3c!-- ko template: { name: question.koTemplateName(), data: question, afterRender: question.koQuestionAfterRender } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko ifnot: question.isDefaultRendering() --\x3e\n    \x3c!-- ko component: { name: getComponentName(), params: { question: question } } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.hasComment --\x3e\n  <div data-bind=\"css: question.getCommentAreaCss()\">\n    <div>\n      \x3c!-- ko template: { name: 'survey-string', data: question.locCommentText } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- ko template: { name: 'survey-comment',  data: {'question': question, 'visible': true } } --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.showErrorOnBottom --\x3e\n    \x3c!-- ko template: { name: 'survey-question-errors', data: question } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.hasDescriptionUnderInput --\x3e\n  <div data-bind=\"css: cssClasses.descriptionUnderInput, attr: {'id': question.ariaDescriptionId}\">\n    \x3c!-- ko template: { name: 'survey-string', data: locDescription } --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n</div>\n<\/script>"},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question-title\">\n  <div data-bind=\"css: question.cssHeader, click: function(m, e) { if(question.clickTitleFunction) return question.clickTitleFunction(e); }\">\n    \x3c!-- ko component: { name: 'survey-element-title', params: { element: $data } } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- ko if: $data.hasDescriptionUnderTitle --\x3e\n    <div data-bind=\"css: $data.cssDescription, visible: $data.hasDescription, attr: {'id': $data.ariaDescriptionId}\">\n      \x3c!-- ko template: { name: 'survey-string', data: $data.locDescription } --\x3e\x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: $data.hasAdditionalTitleToolbar --\x3e\n    \x3c!-- ko component: { name: 'sv-action-bar', params: { model: $data.additionalTitleToolbar } } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n<\/script>"},function(e,t){e.exports='<script type="text/html" id="survey-question-boolean">\n  <div data-bind="css: question.cssClasses.root, event: { keydown: question.onKeyDown}">\n    <label data-bind="css: question.getItemCss()">\n      <input\n        type="checkbox"\n        data-bind="value: question.booleanValue, css: question.cssClasses.control, attr: {name: question.name, id: question.inputId, \'role\': question.a11y_input_ariaRole, \'aria-required\': question.a11y_input_ariaRequired, \'aria-labelledby\': question.a11y_input_ariaLabelledBy, \'aria-describedby\': question.a11y_input_ariaDescribedBy, \'aria-invalid\': question.a11y_input_ariaInvalid, \'aria-errormessage\': question.a11y_input_ariaErrormessage, \'aria-label\': question.a11y_input_ariaLabel, readonly: question.isReadOnlyAttr}, checked: question.booleanValue, surveyProp: {indeterminate: question.isIndeterminate}, enable: !question.isDisabledAttr"\n      />\n      <div data-bind="css: question.cssClasses.sliderGhost, click: onFalseLabelClick">\n        <span data-bind="css: question.getLabelCss(swapOrder)">\n          \x3c!-- ko template: { name: \'survey-string\', data: locLabelLeft } --\x3e\x3c!-- /ko --\x3e\n        </span>\n      </div>\n      <div data-bind="css: question.cssClasses.switch, click: onSwitchClick">\n        <span data-bind="css: question.cssClasses.slider, style: { marginLeft: question.thumbMargin }">\n            \x3c!-- ko if: question.cssClasses.sliderText && question.isDeterminated --\x3e\n            <span data-bind="css: question.cssClasses.sliderText">\n              \x3c!-- ko template: { name: \'survey-string\', data: question.getCheckedLabel() } --\x3e\x3c!-- /ko --\x3e\n            </span>\n            \x3c!-- /ko --\x3e\n        </span>\n      </div>\n      <div data-bind="css: question.cssClasses.sliderGhost, click: onTrueLabelClick">\n        <span data-bind="css: question.getLabelCss(!swapOrder)">\n          \x3c!-- ko template: { name: \'survey-string\', data: locLabelRight } --\x3e\x3c!-- /ko --\x3e\n        </span>\n      </div>\n    </label>\n  </div>\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-question-checkbox">\n  <fieldset data-bind="css: question.getSelectBaseRootCss(), attr: { \'role\': question.a11y_input_ariaRole, \'aria-required\': question.a11y_input_ariaRequired, \'aria-labelledby\': question.a11y_input_ariaLabelledBy, \'aria-describedby\': question.a11y_input_ariaDescribedBy, \'aria-invalid\': question.a11y_input_ariaInvalid, \'aria-errormessage\': question.a11y_input_ariaErrormessage, \'aria-label\': question.a11y_input_ariaLabel }">\n      <legend data-bind="text: question.locTitle.renderedHtml" class="sv-hidden"></legend>\n      \x3c!-- ko if: question.hasHeadItems  --\x3e\n        \x3c!-- ko foreach: { data: question.headItems, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n          \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n          \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko ifnot: question.hasColumns  --\x3e\n        \x3c!-- ko if: question.blockedRow --\x3e\n        <div data-bind="css: question.cssClasses.rootRow">\n          \x3c!-- ko foreach: { data: question.dataChoices, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n          \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n          \x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n        </div>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko ifnot: question.blockedRow --\x3e\n        \x3c!-- ko foreach: { data: question.bodyItems, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n          \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n          \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.hasColumns  --\x3e\n        <div data-bind="css: question.cssClasses.rootMultiColumn">\n        \x3c!-- ko foreach: question.columns --\x3e\n            <div data-bind="css: question.getColumnClass()" role="presentation">\n            \x3c!-- ko foreach: { data: $data, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n              \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n              \x3c!-- /ko --\x3e\n            \x3c!-- /ko --\x3e\n            </div>\n        \x3c!-- /ko --\x3e\n        </div>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.hasFootItems  --\x3e\n        \x3c!-- ko foreach: { data: question.footItems, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n          \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n          \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.hasOther && question.isOtherSelected --\x3e\n      <div data-bind="css: question.getCommentAreaCss(true), template: { name: \'survey-other\', data: {\'question\': question, \'visible\': question.isOtherSelected } }"></div>\n      \x3c!-- /ko --\x3e\n    </fieldset>\n<\/script>\n<script type="text/html" id="survey-checkbox-item">\n  <div role="presentation" data-bind="css: question.getItemClass($data)">\n      <label data-bind="css: question.getLabelClass($data)">\n          <input type="checkbox" role="option" data-bind="attr: {name: question.name + id, id: question.getItemId($data), readonly: question.isReadOnlyAttr}, value: $data.value, checked: question.isItemSelected($data), event: { change: (i, e) => { question.clickItemHandler($data, e.target.checked); } }, enable: question.getItemEnabled($data), css: question.cssClasses.itemControl"/>\n          \x3c!-- ko if: question.cssClasses.materialDecorator --\x3e\n          <span data-bind="css: question.cssClasses.materialDecorator">\n            \x3c!-- ko if: question.itemSvgIcon --\x3e\n            <svg data-bind="css:question.cssClasses.itemDecorator">\n              <use data-bind="attr:{\'xlink:href\':question.itemSvgIcon}" xlink:href=\'\'></use>\n            </svg>\n            \x3c!-- /ko --\x3e\n          </span>\n          \x3c!-- /ko --\x3e\n          \x3c!-- ko if: !$data.hideCaption --\x3e\n          <span data-bind="css: question.cssClasses.controlLabel">\n          \x3c!-- ko template: { name: \'survey-string\', data: $data.locText } --\x3e\n          \x3c!-- /ko --\x3e\n          </span>\n          \x3c!-- /ko --\x3e\n      </label>\n  </div>\n<\/script>\n'},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question-tagbox\">\n  <div data-bind=\"css: question.renderCssRoot\">\n    \x3c!-- ko component: { name: 'sv-tagbox', params: { question: question } } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.isOtherSelected --\x3e\n  <div\n    data-bind=\"css: question.getCommentAreaCss(true), template: { name: 'survey-other', data: {'question': question, 'visible': question.isOtherSelected } }, style: {display: question.isFlowLayout ? 'inline': ''}\">\n  </div>\n  \x3c!-- /ko --\x3e\n  </div>\n<\/script>"},function(e,t){e.exports='<script type="text/html" id="survey-question-ranking">\n   \x3c!-- ko ifnot: question.selectToRankEnabled --\x3e\n  <div data-bind="css: question.rootClass">\n    \x3c!-- ko foreach: { data: question.renderedRankingChoices, as: \'item\', afterRender: question.koAfterRender } --\x3e\n      \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { number: question.getNumberByIndex($index()), componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: \'survey-ranking-item\', data: item } } } --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n\n  \x3c!-- ko if: question.selectToRankEnabled --\x3e\n  <div data-bind="css: question.rootClass">\n    <div data-bind="css: question.getContainerClasses(\'from\')" data-ranking="from-container">\n      \x3c!-- ko foreach: { data: question.renderedUnRankingChoices, as: \'item\', afterRender: question.koAfterRender } --\x3e\n        \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { number: \'\', componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: \'survey-ranking-item\', data: item } } } --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.renderedUnRankingChoices.length === 0 --\x3e\n        <div data-bind="css: cssClasses.containerPlaceholder">\n            \x3c!-- ko template: { name: \'survey-string\', data: question.locSelectToRankEmptyRankedAreaText } --\x3e\n            \x3c!-- /ko --\x3e\n        </div>\n      \x3c!-- /ko --\x3e\n    </div>\n    <div data-bind="css: cssClasses.containersDivider"></div>\n    <div data-bind="css: question.getContainerClasses(\'to\')" data-ranking="to-container">\n      \x3c!-- ko foreach: { data: question.renderedRankingChoices, as: \'item\', afterRender: question.koAfterRender } --\x3e\n        \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { number: question.getNumberByIndex($index()), componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: \'survey-ranking-item\', data: item } } } --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.renderedRankingChoices.length === 0 --\x3e\n      <div data-bind="css: cssClasses.containerPlaceholder">\n          \x3c!-- ko template: { name: \'survey-string\', data: question.locSelectToRankEmptyUnrankedAreaText } --\x3e\n          \x3c!-- /ko --\x3e\n      </div>\n      \x3c!-- /ko --\x3e\n    </div>\n  </div>\n\n  \x3c!-- /ko --\x3e\n<\/script>\n\n<script type="text/html" id="survey-ranking-item">\n  <div\n    data-bind="event: { keydown: question.koHandleKeydown, pointerdown: question.koHandlePointerDown, pointerup: question.koHandlePointerUp}, css: question.getItemClass($data), attr: {tabindex: question.getItemTabIndex($data), \'data-sv-drop-target-ranking-item\': $index() }"\n  >\n    <div tabindex="-1" style="outline: none;">\n      <div data-bind="css: question.cssClasses.itemGhostNode"></div>\n      <div data-bind="css: question.cssClasses.itemContent">\n        <div data-bind="css: question.cssClasses.itemIconContainer">\n          <svg data-bind="css:question.getIconHoverCss()">\n            <use data-bind="attr:{\'xlink:href\':question.dragDropSvgIcon}" xlink:href=\'\'></use>\n          </svg>\n          <svg data-bind="css:question.getIconFocusCss()">\n            <use data-bind="attr:{\'xlink:href\':question.arrowsSvgIcon}" xlink:href=\'\'></use>\n          </svg>\n        </div>\n        \x3c!-- ko if: $parent.number --\x3e\n        <div\n          data-bind="css: question.getItemIndexClasses(item), text: $parent.number"\n        ></div>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko ifnot: $parent.number --\x3e\n        <div\n          data-bind="css: question.getItemIndexClasses(item)"\n        >\n        <svg>\n          <use data-bind="attr:{\'xlink:href\':question.dashSvgIcon}" xlink:href=\'\'></use>\n        </svg>\n        </div>\n        \x3c!-- /ko --\x3e\n\n        \x3c!-- ko component: { name: question.itemContentComponent, params: { cssClasses: question.cssClasses, item: $data } } --\x3e\n        \x3c!-- /ko --\x3e\n      </div>\n    </div>\n  </div>\n<\/script>'},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question-comment\">\n\x3c!--ko if: !question.isReadOnlyRenderDiv() --\x3e\n<textarea data-bind=\"attr: {'readonly': question.isReadOnlyAttr, 'disabled': question.isDisabledAttr, maxLength: question.getMaxLength(), cols: question.cols, rows: question.rows, id: question.inputId, placeholder: question.renderedPlaceholder, 'aria-required': question.a11y_input_ariaRequired, 'aria-label': question.a11y_input_ariaLabel, 'aria-labelledby': question.a11y_input_ariaLabelledBy, 'aria-describedby': question.a11y_input_ariaDescribedBy, 'aria-invalid': question.a11y_input_ariaInvalid, 'aria-errormessage': question.a11y_input_ariaErrormessage}, \n  event: { input: function(s, e) { question.onInput(e); }, keydown: function(s, e) { question.onKeyDown(e); return true; } }, \n  value: question.value, \n  style: { resize: question.resizeStyle },\n  css: question.className\"></textarea>\n  \x3c!--ko if: question.getMaxLength() --\x3e\n  \x3c!-- ko component: { name: 'sv-character-counter', params: { counter: question.characterCounter, remainingCharacterCounter: question.cssClasses.remainingCharacterCounter } } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!--/ko--\x3e\n\x3c!--/ko--\x3e\n\n\x3c!--ko if: question.isReadOnlyRenderDiv() --\x3e\n<div data-bind=\"text: question.value\"></div>\n\x3c!--/ko--\x3e\n<\/script>"},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question-composite\">\n  \x3c!-- ko template: { name: 'survey-panel', data: question.contentPanel, as: 'question', afterRender: question.contentPanel.koPanelAfterRender } --\x3e\n  \x3c!-- /ko --\x3e\n<\/script>\n"},function(e,t){e.exports='<script type="text/html" id="survey-question-custom">\n    \x3c!-- ko if: question.contentQuestion.isDefaultRendering() --\x3e\n      \x3c!-- ko template: { name: question.contentQuestion.koTemplateName(), data: question.contentQuestion, as: \'question\', afterRender: question.contentQuestion.koQuestionAfterRender } --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko ifnot: question.contentQuestion.isDefaultRendering() --\x3e\n      \x3c!-- ko component: { name: question.contentQuestion.getComponentName(), params: { question: question.contentQuestion } } --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n<\/script>\n'},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question-dropdown\">\n  <div data-bind=\"css: question.renderCssRoot\">\n    \x3c!-- ko component: { name: 'sv-dropdown', params: { question: question } } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.isOtherSelected --\x3e\n  <div data-bind=\"css: question.getCommentAreaCss(true), template: { name: 'survey-other', data: {'question': question, 'visible': question.isOtherSelected } }, style: {display: question.isFlowLayout ? 'inline': ''}\">\n  </div>\n  \x3c!-- /ko --\x3e\n  </div>\n<\/script>\n"},function(e,t){e.exports='<script type="text/html" id="survey-question-empty">\n    <div></div>\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="survey-question-errors">\n        \x3c!-- ko if: hasVisibleErrors --\x3e\n            <div role="alert" aria-live="polite" data-bind="visible: hasVisibleErrors, foreach: { data: errors, as: \'error\' }, css: cssError, attr: { id: question.id + \'_errors\' }">\n            \x3c!-- ko if: error.visible --\x3e\n            \x3c!-- ko component: { name: question.survey.questionErrorComponent, params: { error: error, cssClasses: question.cssClasses, element: question } } --\x3e\n            \x3c!-- /ko --\x3e\n            \x3c!-- /ko --\x3e\n        </div>\n        \x3c!-- /ko --\x3e\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-question-expression">\n  <div data-bind="text:question.formatedValue, css: question.cssClasses.root"></div>\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="survey-question-file">\n  <div data-bind="css: question.fileRootCss">\n        \x3c!-- ko ifnot: question.isInputReadOnly --\x3e\n          \x3c!-- ko if: question.hasFileUI --\x3e\n          <input type="file" tabindex="-1" data-bind="css: question.cssClasses.fileInput, attr: { id: question.inputId, \'aria-required\': question.ariaRequired, \'aria-label\': question.ariaLabel, \'aria-invalid\': question.ariaInvalid, \'aria-errormessage\': question.ariaErrormessage, multiple: question.allowMultiple ? \'multiple\' : undefined, title: koInputTitle, accept: question.acceptedTypes, capture: question.renderCapture }">\n          \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: question.isReadOnlyAttr --\x3e\n        <input type="file" readonly data-bind="css: question.getReadOnlyFileCss(), attr: { id: question.inputId, placeholder: question.title, multiple: question.allowMultiple ? \'multiple\' : undefined }" style="color: transparent;"/>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: question.isDisabledAttr --\x3e\n        <input type="file" disabled data-bind="css: question.getReadOnlyFileCss(), attr: { id: question.inputId, placeholder: question.title, multiple: question.allowMultiple ? \'multiple\' : undefined }" style="color: transparent;"/>\n        \x3c!-- /ko --\x3e\n        <div data-bind="css: question.cssClasses.dragArea, event: { dragenter: question.ondragenter, dragover: question.ondragover, drop: question.ondrop, dragleave: question.ondragleave }">     \n          \x3c!-- ko if: question.showFileDecorator --\x3e\n          <div data-bind="css: question.getFileDecoratorCss()">\n            <span data-bind="css: question.cssClasses.dragAreaPlaceholder">\n              \x3c!-- ko template: { name: \'survey-string\', data: question.locRenderedPlaceholder } --\x3e\n              \x3c!-- /ko --\x3e\n            </span>\n            <div data-bind="css: question.cssClasses.wrapper">\n              \x3c!-- ko if: question.showChooseButton --\x3e\n                \x3c!-- ko component: { name: \'sv-file-choose-btn\' } --\x3e\n                \x3c!-- /ko --\x3e\n              \x3c!-- /ko --\x3e\n              \x3c!-- ko if: question.actionsContainerVisible --\x3e\n              \x3c!-- ko component: { name: \'sv-action-bar\', params: { model: question.actionsContainer } } --\x3e\n              \x3c!-- /ko --\x3e\n              \x3c!-- /ko --\x3e\n              \x3c!-- ko if: !question.koHasValue() --\x3e\n              <span data-bind="css: question.cssClasses.noFileChosen, text: question.noFileChosenCaption"></span>\n              \x3c!-- /ko --\x3e\n            </div>\n          </div>\n          \x3c!-- /ko --\x3e\n          \x3c!-- ko if: question.showLoadingIndicator --\x3e\n          <div data-bind="css: question.cssClasses.loadingIndicator">\n            \x3c!-- ko component: { name: "sv-loading-indicator" } --\x3e\n            \x3c!-- /ko --\x3e\n          </div>\n          \x3c!-- /ko --\x3e\n          \x3c!-- ko if: question.isPlayingVideo --\x3e\n          \x3c!-- ko template: { name: \'survey-question-file-video\', data: { question: question } } --\x3e\x3c!-- /ko --\x3e          \n          \x3c!-- /ko --\x3e\n          \x3c!-- ko template: { name: \'survey-question-file-clean-button\', data: {question: question, showRemoveButton: question.showRemoveButton} } --\x3e\x3c!-- /ko --\x3e\n          \x3c!-- ko if: question.allowShowPreview --\x3e\n          \x3c!-- ko component: { name: \'sv-file-preview\', data: { question: question } } --\x3e\x3c!-- /ko --\x3e          \n          \x3c!-- /ko --\x3e\n          \x3c!-- ko template: { name: \'survey-question-file-clean-button\', data: {question: question, showRemoveButton: question.showRemoveButtonBottom} } --\x3e\x3c!-- /ko --\x3e\n          \x3c!-- ko if: question.fileNavigatorVisible --\x3e\n          \x3c!-- ko component: { name: \'sv-action-bar\', params: { model: question.fileNavigator } } --\x3e\n          \x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n        </div>\n  </div>\n<\/script>\n<script type="text/html" id="survey-question-file-clean-button">\n  \x3c!-- ko if: question.koHasValue() && !question.isReadOnly && $data.showRemoveButton--\x3e\n  <button type="button" data-bind="css: showRemoveButton, enabled: !question.isInputReadOnly, click: question.doclean">\n      <span data-bind="text: question.clearButtonCaption"></span>\n  </button>\n  \x3c!-- /ko --\x3e\n<\/script>\n<script type="text/html" id="survey-question-file-video">\n  <div data-bind="css: question.cssClasses.videoContainer">\n    \x3c!-- ko component: { name: \'sv-action\', params: { item: question.changeCameraAction } } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- ko component: { name: \'sv-action\', params: { item: question.closeCameraAction } } --\x3e\x3c!-- /ko --\x3e\n    <video autoplay playsinline data-bind="attr: { id: question.videoId },  css: question.cssClasses.video"></video>\n    \x3c!-- ko component: { name: \'sv-action\', params: { item: question.takePictureAction } } --\x3e\x3c!-- /ko --\x3e\n  </div>\n<\/script>\n<script type="text/html" id="survey-question-file-sign">\n  \x3c!-- ko if: item.name && fileSignCss --\x3e\n  <div data-bind="css: fileSignCss">\n    <a data-bind="style: { width: question.imageWidth }, click: question.dodownload, text: item.name, attr: { href: item.content, title: item.name, download: item.name }"></a>\n  </div>\n  \x3c!-- /ko --\x3e\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-question-html">\n  <div data-bind="html: question.locHtml.koRenderedHtml, css: question.renderCssRoot"></div>\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="survey-question-image">\n  <div data-bind="css: question.cssClasses.root">\n    \x3c!-- ko if: question.renderedMode === "image" --\x3e\n    <img data-bind="event: { load: question.onLoadHandler, error: question.onErrorHandler }, css: question.getImageCss(), attr: { src: $data.locImageLink.koRenderedHtml() || null, width: question.renderedWidth, height: question.renderedHeight, alt: question.altText || question.title }, style: { objectFit: question.imageFit,  width: question.renderedStyleWidth, height: question.renderedStyleHeight }, visible: $data.locImageLink.koRenderedHtml() && !question.contentNotLoaded"/>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.renderedMode === "video" --\x3e\n    <video controls data-bind="event: { load: question.onLoadHandler, error: question.onErrorHandler }, css: question.getImageCss(), attr: { src: $data.locImageLink.koRenderedHtml(), width: question.renderedWidth, height: question.renderedHeight }, style: { objectFit: question.imageFit,  width: question.renderedStyleWidth, height: question.renderedStyleHeight }, visible: $data.locImageLink.koRenderedHtml() && !question.contentNotLoaded"></video>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.renderedMode === "youtube" --\x3e\n    <iframe data-bind=" css: question.getImageCss(), attr: { src: $data.locImageLink.koRenderedHtml(), width: question.renderedWidth, height: question.renderedHeight }, style: { objectFit: question.imageFit,  width: question.renderedStyleWidth, height: question.renderedStyleHeight }"></iframe>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: !$data.locImageLink.koRenderedHtml() || question.contentNotLoaded  --\x3e\n    <div data-bind="css: question.cssClasses.noImage">\n      \x3c!-- ko component: { name: \'sv-svg-icon\', params: { iconName: question.cssClasses.noImageSvgIconId, size: 48 } } --\x3e\x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="survey-question-imagepicker">\n    <fieldset data-bind="css: question.getSelectBaseRootCss()">\n        <legend class="sv-hidden" data-bind="text: question.locTitle.renderedHtml"></legend>\n        \x3c!-- ko ifnot: question.hasColumns --\x3e\n        \x3c!-- ko foreach: { data: question.visibleChoices, as: \'item\', afterRender: question.koAfterRender}  --\x3e\n        \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: \'survey-imagepicker-item\', data: item } } } --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: question.hasColumns --\x3e\n        \x3c!-- ko foreach: question.columns --\x3e\n        <div data-bind="css: question.getColumnClass()" role="presentation">\n            \x3c!-- ko foreach: { data: $data, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n            \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: \'survey-imagepicker-item\', data: item } } } --\x3e\n            \x3c!-- /ko --\x3e\n            \x3c!-- /ko --\x3e\n        </div>\n        \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n    </fieldset>\n<\/script>\n<script type="text/html" id="survey-imagepicker-item">\n    <div data-bind="css: question.koGetItemClass(item)">\n        <label data-bind="css: question.cssClasses.label">\n            <input data-bind="attr: {type: question.inputType, name: question.questionName, value: item.value, id: question.getItemId(item), \'aria-required\': question.ariaRequired, \'aria-label\': question.ariaLabel, \'aria-invalid\': question.ariaInvalid, \'aria-errormessage\': question.ariaErrormessage, readonly: question.isReadOnlyAttr}, checked: question.koValue, enable: question.getItemEnabled(item), css: question.cssClasses.itemControl"\n            />\n            <div data-bind="css: question.cssClasses.itemDecorator">\n                <div data-bind="css: question.cssClasses.imageContainer">\n                  \x3c!-- ko if: question.cssClasses.checkedItemDecorator --\x3e\n                  <span data-bind="css: question.cssClasses.checkedItemDecorator">\n                    \x3c!-- ko if: question.cssClasses.checkedItemSvgIconId --\x3e\n                    \x3c!-- ko component: { name: \'sv-svg-icon\', params: { css: question.cssClasses.checkedItemSvgIcon, iconName: question.cssClasses.checkedItemSvgIconId, size: \'auto\' } } --\x3e\n                    \x3c!-- /ko --\x3e\n                    \x3c!-- /ko --\x3e\n                   </span>\n                  \x3c!-- /ko --\x3e\n                  \x3c!-- ko if: ($data.locImageLink.koRenderedHtml() && !$data.contentNotLoaded && question.contentMode === "image") --\x3e\n                  <img data-bind="css: question.cssClasses.image, attr: { src: $data.locImageLink.koRenderedHtml, width: question.renderedImageWidth, height: question.renderedImageHeight, alt: item.locText.koRenderedHtml }, style: { objectFit: question.imageFit }, event: { load: question.onContentLoaded, error: $data.onErrorHandler }"/>\n                  \x3c!-- /ko --\x3e\n                  \x3c!-- ko if: ($data.locImageLink.koRenderedHtml() && !$data.contentNotLoaded && question.contentMode === "video") --\x3e\n                  <video controls data-bind="css: question.cssClasses.image, attr: { src: $data.locImageLink.koRenderedHtml, width: question.renderedImageWidth, height: question.renderedImageHeight }, style: { objectFit: question.imageFit }, event: { loadedmetadata: question.onContentLoaded, error: $data.onErrorHandler }"></video>\n                  \x3c!-- /ko --\x3e\n                  \x3c!-- ko if: (!$data.locImageLink.koRenderedHtml() || $data.contentNotLoaded) --\x3e\n                  <div data-bind="css: question.cssClasses.itemNoImage, style: { width: question.renderedImageWidth, height: question.renderedImageHeight, objectFit: question.imageFit}">\n                    \x3c!-- ko component: { name: \'sv-svg-icon\', params: { css: question.cssClasses.itemNoImageSvgIcon, iconName: question.cssClasses.itemNoImageSvgIconId, size: 48 } } --\x3e\x3c!-- /ko --\x3e\n                  </div>\n                  \x3c!-- /ko --\x3e\n                  \n                </div>\n                \x3c!-- ko if: question.showLabel --\x3e\n                <span data-bind="css: question.cssClasses.itemText">\n                  \x3c!-- ko template: { name: \'survey-string\', data: item.locText } --\x3e\n                  \x3c!-- /ko --\x3e\n                </span>\n                \x3c!-- /ko --\x3e\n            </div>\n        </label>\n    </div>\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-question-matrix">\n  <div data-bind="css: question.cssClasses.tableWrapper">\n    <fieldset>\n      <legend class="sv-hidden"\n        data-bind="text: question.locTitle.renderedHtml"\n      ></legend>\n      <table data-bind="css: question.getTableCss()">\n        \x3c!-- ko if: question.showHeader --\x3e\n        <thead>\n          <tr>\n            \x3c!-- ko if: question.hasRows --\x3e\n            <td data-bind="visible: question.hasRows"></td>\n            \x3c!-- /ko --\x3e\n            \x3c!-- ko foreach: question.koVisibleColumns --\x3e\n            <th data-bind="css: question.cssClasses.headerCell, style: { minWidth: question.columnMinWidth, width: question.columnMinWidth }">\n              \x3c!-- ko component: { name: question.getColumnHeaderWrapperComponentName($data), params: { componentData:  question.getColumnHeaderWrapperComponentData($data), templateData: { data: $data } } } --\x3e\n                \x3c!-- ko template: { name: \'survey-string\', data: $data.locText } --\x3e\x3c!-- /ko --\x3e\n              \x3c!-- /ko --\x3e\n            </th>\n            \x3c!-- /ko --\x3e\n          </tr>\n        </thead>\n        \x3c!-- /ko --\x3e\n        <tbody>\n          \x3c!-- ko foreach: { data: question.koVisibleRows, as: \'row\' } --\x3e\n          <tr data-bind="css: row.rowClasses">\n            <td\n              data-bind="visible: question.hasRows, css: row.rowTextClasses, style: {  minWidth: question.rowTitleWidth, width: question.rowTitleWidth }"\n            >\n              \x3c!-- ko component: { name: question.getRowHeaderWrapperComponentName($data), params: { componentData:  question.getRowHeaderWrapperComponentData($data), templateData: { data: $data } } } --\x3e\n                \x3c!-- ko template: { name: \'survey-string\', data: row.locText } --\x3e\n                \x3c!-- /ko --\x3e\n              \x3c!-- /ko --\x3e\n            </td>\n            \x3c!-- ko foreach: question.koVisibleColumns --\x3e\n            \x3c!-- ko if: question.hasCellText --\x3e\n            <td\n              data-bind="css: question.getItemClass(row, $data), click: function() { row.cellClick($data); }"\n            >\n              \x3c!-- ko template: { name: \'survey-string\', data: question.getCellDisplayLocText(row.name, $data) } --\x3e\n              \x3c!-- /ko --\x3e\n            </td>\n            \x3c!-- /ko --\x3e\n            \x3c!-- ko if: !question.hasCellText --\x3e\n            <td\n              data-bind="attr: { \'data-responsive-title\': $data.locText.renderedHtml }, css: question.cssClasses.cell"\n            >\n            \x3c!-- ko component: { name: "sv-template-renderer", params: { templateData: { name: question.cellComponent, data: { question: question, row: $parent, column: $data } } } } --\x3e\n            \x3c!-- /ko --\x3e\n            </td>\n            \x3c!-- /ko --\x3e\n            \x3c!-- /ko --\x3e\n          </tr>\n          \x3c!-- /ko --\x3e\n        </tbody>\n      </table>\n    </fieldset>\n  </div>\n<\/script>\n<script type="text/html" id="survey-text">\n  <span data-bind="text:$data.renderedHtml"></span>\n<\/script>\n<script type="text/html" id="survey-matrix-cell">\n  <label data-bind="css: question.getItemClass(row, column), event: { mousedown: question.koMouseDown }" >\n    <input\n      type="radio"\n      data-bind="css: question.cssClasses.itemValue, attr: { name: row.fullName, readonly: row.isReadOnlyAttr, \'aria-required\': question.a11y_input_ariaRequired, \'aria-label\': question.getCellAriaLabel(row.locText.renderedHtml, column.locText.renderedHtml), \'aria-invalid\': question.a11y_input_ariaInvalid, \'aria-errormessage\': question.a11y_input_ariaErrormessage, id: question.inputId + \'_\' + row.name + \'_\' + $index() }, enable: !row.isDisabledAttr, checkedValue: column.value, checked: row.value"\n    />\n    <span data-bind="css: question.cssClasses.materialDecorator">\n        \x3c!-- ko if: question.itemSvgIcon --\x3e\n          <svg data-bind="css:question.cssClasses.itemDecorator">\n            <use data-bind="attr:{\'xlink:href\':question.itemSvgIcon}" xlink:href=\'\'></use>\n          </svg>  \n        \x3c!-- /ko --\x3e\n    </span>\n    \x3c!-- ko if: question.isMobile --\x3e\n    <span data-bind="css: question.cssClasses.cellResponsiveTitle">\n      \x3c!-- ko template: { name: \'survey-string\', data: column.locText } --\x3e\x3c!-- /ko --\x3e\n    </span>\n    \x3c!-- /ko --\x3e\n  </label>\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="survey-question-matrixdynamic">\n    <div>\n      \x3c!-- ko if: question.koTable().showAddRowOnTop --\x3e\n      <div\n        data-bind="css: question.cssClasses.footer"\n      >\n        <button\n          type="button"\n          data-bind="click: question.isDesignMode ? undefined : question.koAddRowClick, css: question.getAddRowButtonCss(), disable: question.isInputReadOnly"\n        >\n          \x3c!-- ko template: { name: \'survey-string\', data: question.locAddRowText } --\x3e\x3c!-- /ko --\x3e\n          <span data-bind="css: question.cssClasses.iconAdd"></span>\n        </button>\n      </div>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko template: { name: \'survey-matrixtable\' } --\x3e\n      \x3c!--/ko--\x3e\n      \x3c!-- ko ifnot: question.koTable().showTable --\x3e\n      <div data-bind="css: question.cssClasses.emptyRowsSection">\n        <div data-bind="css: question.cssClasses.emptyRowsText">\n          \x3c!-- ko template: { name: \'survey-string\', data: question.locEmptyRowsText } --\x3e\x3c!-- /ko --\x3e\n        </div>\n        \x3c!-- ko if: question.koTable().showAddRow --\x3e  \n        <button\n          type="button"\n          data-bind="click:question.koAddRowClick, css: question.getAddRowButtonCss(true), disable: question.isInputReadOnly"\n        >\n          \x3c!-- ko template: { name: \'survey-string\', data: question.locAddRowText } --\x3e\x3c!-- /ko --\x3e\n          <span data-bind="css: question.cssClasses.iconAdd"></span>\n        </button>\n        \x3c!-- /ko --\x3e\n      </div>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.koTable().showAddRowOnBottom --\x3e\n      <div\n        data-bind="css: question.cssClasses.footer"\n      >\n        <button\n          type="button"\n          data-bind="click: question.koAddRowClick, css: question.getAddRowButtonCss(), disable: question.isInputReadOnly"\n        >\n          \x3c!-- ko template: { name: \'survey-string\', data: question.locAddRowText } --\x3e\x3c!-- /ko --\x3e\n          <span data-bind="css: question.cssClasses.iconAdd"></span>\n        </button>\n      </div>\n      \x3c!-- /ko --\x3e\n  </div>\n<\/script>\n<script type="text/html" id="survey-matrixdropdown-cell">\n  <td\n    data-bind="css: $data.className, style: { minWidth: $data.minWidth, width: $data.width }, attr: { \'data-responsive-title\': headers, title: $data.getTitle(), colspan: $data.colSpans }, event: {focusin: $data.focusIn }"\n  >\n    \x3c!-- ko if: $data.matrix --\x3e\n    <div data-bind="visible: question.isVisible, css: cellQuestionWrapperClassName">\n      \x3c!-- ko if: $data.isOtherChoice --\x3e\n        <div data-bind="css: question.getCommentAreaCss(true), template: { name: \'survey-other\', data: {\'question\': question, \'visible\': true } }"></div>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: $data.isCheckbox --\x3e\n        \x3c!-- ko let: { question: $data.matrix.getCellTemplateData($data) } --\x3e\n          \x3c!-- ko component: { name: $data.matrix.getCellWrapperComponentName($data), params: { componentData:  $data.matrix.getCellWrapperComponentData($data), templateData: { name:  \'survey-checkbox-item\', data: item } } } --\x3e\n          \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: $data.isRadio --\x3e\n        \x3c!-- ko let: { question: $data.matrix.getCellTemplateData($data) } --\x3e\n          \x3c!-- ko component: { name: $data.matrix.getCellWrapperComponentName($data), params: { componentData:  $data.matrix.getCellWrapperComponentData($data), templateData: { name:  \'survey-radiogroup-item\', data: item } } } --\x3e\n          \x3c!-- /ko --\x3e  \n        \x3c!-- /ko --\x3e   \n      \x3c!-- /ko --\x3e\n      \x3c!-- ko ifnot: $data.isChoice --\x3e\n      \x3c!-- ko if: question.isDefaultRendering() --\x3e\n        \x3c!-- ko let: { question: $data.matrix.getCellTemplateData($data) } --\x3e\n        \x3c!-- ko component: { name: $data.matrix.getCellWrapperComponentName($data), params: { componentData:  $data.matrix.getCellWrapperComponentData($data), templateData: { name: question.koTemplateName(), data: question, afterRender: function(el) { $data.matrix.koCellQuestionAfterRender(el, $data); } } } } --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko ifnot: question.isDefaultRendering() --\x3e\n        \x3c!-- ko component: { name: question.getComponentName(), params: { question: question } } --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko ifnot: $data.matrix --\x3e\n    \x3c!-- ko if: $data.locTitle --\x3e\n    \x3c!-- ko template: { name: \'survey-string\', data: $data.locTitle } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n  </td>\n<\/script>\n<script type="text/html" id="survey-matrixtable">\n<div\n  data-bind="visible: question.koTable().showTable, css: question.cssClasses.tableWrapper, style: { overflowX: question.showHorizontalScroll ? \'scroll\': \'\' }"\n>\n  <table data-bind="css: question.getTableCss()">\n    \x3c!-- ko if: question.koTable().showHeader --\x3e\n    <thead>\n      <tr>\n        \x3c!-- ko foreach: question.koTable().headerRow.cells --\x3e\n          \x3c!-- ko if: $data.hasTitle --\x3e\n            <th\n              data-bind="style: { minWidth: $data.minWidth, width: $data.width }, css: $data.className"\n            >\n              \x3c!-- ko component: { name: question.getColumnHeaderWrapperComponentName($data), params: { componentData:  question.getColumnHeaderWrapperComponentData($data), templateData: { data: $data } } } --\x3e\n                \x3c!-- ko template: { name: \'survey-string\', data: $data.locTitle } --\x3e\x3c!-- /ko --\x3e\n                \x3c!-- ko if: $data.column && $data.column.isRenderedRequired --\x3e\n                <span>&nbsp</span>\n                <span data-bind="css: question.cssClasses.cellRequiredText, text: $data.column.requiredText"></span>\n                \x3c!-- /ko --\x3e\n              \x3c!-- /ko --\x3e\n            </th>\n          \x3c!-- /ko --\x3e\n          \x3c!-- ko ifnot: $data.hasTitle --\x3e\n            <td data-bind="style: { minWidth: $data.minWidth, width: $data.width }, css: $data.className"></td>\n          \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      </tr>\n    </thead>\n    \x3c!-- /ko --\x3e\n    <tbody>\n      \x3c!-- ko foreach: { data: question.koTable().renderedRows, afterRender: question.koRowAfterRender } --\x3e\n      \x3c!-- ko ifnot: ($parent.detailPanelMode === "popup" && $data.isDetailRow) || !$data.visible--\x3e\n      <tr data-bind="css: $data.className, attr: attributes, event: { pointerdown: function (model, event) { question.onPointerDown(event, row); return true;} }">\n        \x3c!-- ko foreach: $data.cells --\x3e\n        \x3c!-- ko if: $data.isDragHandlerCell --\x3e\n        <td data-bind="css:$data.className, attr: {colspan: $data.colSpans}">\n          \x3c!-- ko component: { name: \'sv-matrix-drag-drop-icon\', params: { item: { data: { row: row, question: question } } }} --\x3e\n          \x3c!-- /ko --\x3e\n        </td>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: $data.isActionsCell --\x3e\n        <td data-bind="css: $data.className, attr: { colspan: $data.colSpans, \'data-responsive-title\': headers, title: $data.getTitle() }">\n          \x3c!-- ko component: { name: \'sv-action-bar\', params: { model: $data.item.getData(), handleClick: false } } --\x3e\n          \x3c!-- /ko --\x3e\n        </td>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: $data.isEmpty --\x3e\n        <td data-bind="css: $data.className, attr: { colspan: $data.colSpans, \'data-responsive-title\': headers, title: $data.getTitle() }"></td>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: $data.hasPanel --\x3e\n        <td data-bind="css: $data.className, attr: { colspan: $data.colSpans }">\n          \x3c!-- ko component: { name: $data.panel.survey.getElementWrapperComponentName($data.panel), \n            params: { componentData:  $data.panel.survey.getElementWrapperComponentData($data.panel), \n            templateData: { name: $data.panel.koElementType, data: $data.panel, afterRender: question.koPanelAfterRender } } } \n          --\x3e\n          \x3c!-- /ko --\x3e\n        </td>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: $data.isErrorsCell --\x3e\n        <td data-bind="css: $data.className, attr: { colspan: $data.colSpans, \'data-responsive-title\': headers, title: $data.getTitle() }">\n            \x3c!-- ko template: { name: \'survey-question-errors\', data: $data.question, as: \'question\' } --\x3e\n            \x3c!-- /ko --\x3e\n        </td>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: $data.hasQuestion --\x3e\n        \x3c!-- ko template: { name: \'survey-matrixdropdown-cell\', afterRender: function(els) { $data.matrix.koCellAfterRender(els, $data); } } --\x3e\x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: $data.hasTitle --\x3e\n        <td\n          data-bind="css: $data.className, style: { minWidth: $data.minWidth, width: $data.width }, attr: { colspan: $data.colSpans, \'data-responsive-title\': headers, title: $data.getTitle() }"\n        >\n          \x3c!-- ko component: { name: question.getRowHeaderWrapperComponentName($data), params: { componentData:  question.getRowHeaderWrapperComponentData($data), templateData: { data: $data } } } --\x3e\n          \x3c!-- ko template: { name: \'survey-string\', data: $data.locTitle } --\x3e\x3c!-- /ko --\x3e\n          \x3c!-- ko if: $data.requiredText --\x3e\n          <span data-bind="css: question.cssClasses.cellRequiredText, text: $data.requiredText"></span>\n          \x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n        </td>\n        \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      </tr>\n\n      \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n    </tbody>\n    \x3c!-- ko if:question.koTable().hasFooter --\x3e\n    <tfoot>\n      <tr>\n        \x3c!-- ko foreach: question.koTable().footerRow.cells --\x3e\n            \x3c!-- ko template: { name: \'survey-matrixdropdown-cell\', afterRender: function(els) { $data.matrix && $data.matrix.koCellAfterRender(els, $data); } } --\x3e\x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      </tr>\n    </tfoot>\n    \x3c!-- /ko --\x3e\n  </table>\n</div>\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-question-matrixdropdown">\n  \x3c!-- ko template: { name: \'survey-matrixtable\' } --\x3e\x3c!--/ko--\x3e\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-question-multipletext">\n  <table data-bind="css: question.getQuestionRootCss()">\n    <tbody data-bind="foreach: { data:  question.getRows(), as: \'row\' }">\n      \x3c!-- ko if: row.isVisible --\x3e\n      <tr data-bind="foreach: { data: row.cells, as: \'cell\' }, css: question.cssClasses.row">\n        <td data-bind="css: cell.className">  \n          \x3c!-- ko ifnot: cell.isErrorsCell --\x3e\n          <label data-bind="css: question.getItemLabelCss(item)">\n              <span data-bind="css: question.koItemTitleCss, style: {  minWidth: question.itemTitleWidth, width: question.itemTitleWidth }">\n                \x3c!-- ko component: { name: \'survey-element-title-content\', params: {element: cell.item.editor} } --\x3e\x3c!-- /ko --\x3e\n              </span>\n              <div data-bind="css: question.koItemCss, event: {focusin: cell.item.focusIn }">\n                \x3c!-- ko template: { name: item.editor.koTemplateName(), data: cell.item.editor, as: \'question\', afterRender: cell.item.editor.koQuestionAfterRender } --\x3e\n                \x3c!-- /ko --\x3e\n              </div>\n          </label>\n          \x3c!-- /ko --\x3e\n          \x3c!-- ko if: cell.isErrorsCell --\x3e\n            \x3c!-- ko template: { name: \'survey-question-errors\', data: cell.item.editor, as: \'question\' } --\x3e\n            \x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n        </td>\n      </tr>\n      \x3c!-- /ko --\x3e\n    </tbody>\n  </table>\n<\/script>\n'},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question-paneldynamic\">\n  <div data-bind=\"css: question.cssClasses.root\">\n    \x3c!-- ko if: question.getShowNoEntriesPlaceholder() --\x3e\n      <div data-bind=\"css: question.cssClasses.noEntriesPlaceholder\">\n        <span>\n          \x3c!-- ko template: { name: 'survey-string', data: locNoEntriesText } --\x3e\x3c!-- /ko --\x3e\n        </span>\n          \x3c!-- ko component: { name: 'sv-paneldynamic-add-btn', params: { question: question }} --\x3e\n          \x3c!-- /ko --\x3e\n        </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.koIsList() --\x3e\n    <div data-bind=\"css: question.cssClasses.panelsContainer\">\n      \x3c!-- ko foreach: { data: question.renderedPanels } --\x3e\n        <div data-bind=\"css: question.getPanelWrapperCss($data)\">\n          \x3c!-- ko let: { question: $data } --\x3e\n            \x3c!-- ko component: { name: survey.getElementWrapperComponentName(question), params: { componentData:  survey.getElementWrapperComponentData(question), templateData: { name: question.koElementType, data: question, afterRender: $parent.koPanelAfterRender } } } --\x3e\n            \x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n          \x3c!-- ko if: question.panelRemoveButtonLocation === 'right' && question.koCanRemovePanel() && $data.state != 'collapsed'--\x3e\n            \x3c!-- ko component: { name: 'sv-paneldynamic-remove-btn', params: { question: question, panel: $data } } --\x3e\n            \x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n          \n        </div>\n        \x3c!-- ko if: question.showSeparator($index()) --\x3e\n        <hr data-bind=\"css: question.cssClasses.separator\"/>\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      </div>\n      \x3c!-- ko if: question.showLegacyNavigation --\x3e\n        \x3c!-- ko component: { name: 'sv-paneldynamic-add-btn', params: { question: question }} --\x3e\x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko ifnot: question.koIsList()  --\x3e\n      \x3c!-- ko if: question.koIsProgressTop--\x3e\n        \x3c!-- ko if: !question.showLegacyNavigation && question.koIsRange --\x3e\n          \x3c!-- ko template: { name: 'survey-question-paneldynamic-progress', data: question, as: 'question'} --\x3e\n          \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: question.showLegacyNavigation --\x3e\n        <div data-bind=\"css: question.cssClasses.progressTop\">\n          \x3c!-- ko template: { name: 'survey-question-paneldynamic-navigator', data: question, as: 'question'} --\x3e\n          \x3c!-- /ko --\x3e\n        </div>\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.koPanel() --\x3e\n      <div data-bind=\"css: question.cssClasses.panelsContainer\">\n        \x3c!-- ko foreach: { data: question.renderedPanels } --\x3e\n          <div data-bind=\"css: question.getPanelWrapperCss($data)\">\n          \x3c!-- ko let: { question: $data } --\x3e\n            \x3c!-- ko component: { name: question.survey.getElementWrapperComponentName(question), params: { componentData:  question.survey.getElementWrapperComponentData(question), templateData: { name: question.koElementType, data: question, afterRender: $parent.koPanelAfterRender } } } --\x3e\n            \x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n          \x3c!-- ko if: question.panelRemoveButtonLocation === 'right'--\x3e\n            \x3c!-- ko template: { name: 'survey-question-paneldynamic-remove-btn', data: { question: question, panel: question.koPanel() }, as: 'question'} --\x3e\n            \x3c!-- /ko --\x3e\n          \x3c!-- /ko--\x3e\n          </div>\n         \x3c!-- /ko --\x3e\n      </div>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.showLegacyNavigation && question.koIsProgressBottom--\x3e \n      <div data-bind=\"css: question.cssClasses.progressBottom\">\n        \x3c!-- ko template: { name: 'survey-question-paneldynamic-navigator', data: question, as: 'question'} --\x3e\n        \x3c!-- /ko --\x3e\n      </div>\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.showNavigation --\x3e\n    <div data-bind=\"css: question.cssClasses.footer\">\n      <hr data-bind=\"css: question.cssClasses.separator\"/>\n      \x3c!-- ko if: question.koIsRange() && question.koIsProgressBottom --\x3e\n         \x3c!-- ko template: { name: 'survey-question-paneldynamic-progress', data: question, as: 'question'} --\x3e\n         \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.footerToolbar.visibleActions.length --\x3e\n      <div data-bind=\"css: question.cssClasses.footerButtonsContainer\">\n        \x3c!-- ko component: { name: \"sv-action-bar\", params: { model: question.footerToolbar } } --\x3e\n        \x3c!-- /ko --\x3e\n      </div>\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n<\/script>"},function(e,t){e.exports='<script type="text/html" id="survey-question-paneldynamic-navigator">\n  <div style="clear: both;">\n        <div data-bind="css: question.cssClasses.progressContainer">\n          \x3c!-- ko component: { name: \'sv-paneldynamic-prev-btn\', params: { question: question }} --\x3e\x3c!-- /ko --\x3e\n          \x3c!-- ko if: question.koIsRange --\x3e\n            \x3c!-- ko template: { name: \'survey-question-paneldynamic-progress\', data: question, as: \'question\'} --\x3e\x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n          \x3c!-- ko component: { name: \'sv-paneldynamic-next-btn\', params: { question: question }} --\x3e\x3c!-- /ko --\x3e\n        </div>\n          \x3c!-- ko component: { name: \'sv-paneldynamic-add-btn\', params: { question: question }} --\x3e\x3c!-- /ko --\x3e\n        <div data-bind="text: question.koProgressText, css: question.cssClasses.progressText"></div>\n      </div>\n<\/script>\n<script type="text/html" id="survey-question-paneldynamic-progress">\n  <div data-bind="css: question.cssClasses.progress">\n    <div\n      data-bind="css: question.cssClasses.progressBar, style: { width: question.koProgress }"\n      role="progressbar"\n    ></div>\n  </div>\n<\/script>'},function(e,t){e.exports='<script type="text/html" id="survey-question-radiogroup">\n\n  <fieldset data-bind="css: question.getSelectBaseRootCss(), attr: { \'role\': question.a11y_input_ariaRole, \'aria-required\': question.a11y_input_ariaRequired, \'aria-labelledby\': question.a11y_input_ariaLabelledBy, \'aria-describedby\': question.a11y_input_ariaDescribedBy, \'aria-invalid\': question.a11y_input_ariaInvalid, \'aria-errormessage\': question.a11y_input_ariaErrormessage, \'aria-label\': question.a11y_input_ariaLabel }">\n    \x3c!-- ko ifnot: question.hasColumns --\x3e\n      \x3c!-- ko if: question.blockedRow --\x3e\n      <div data-bind="css: question.cssClasses.rootRow">\n        \x3c!-- ko foreach: { data: question.dataChoices, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n        \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n      </div>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko ifnot: question.blockedRow --\x3e\n      \x3c!-- ko foreach: { data: question.bodyItems, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n        \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.hasColumns --\x3e\n      <div data-bind="css: question.cssClasses.rootMultiColumn">\n\n        \x3c!-- ko foreach: question.columns --\x3e\n        <div data-bind="css: question.getColumnClass()" role="presentation">\n          \x3c!-- ko foreach: { data: $data, as: \'item\', afterRender: question.koAfterRender } --\x3e\n            \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n            \x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n        </div>\n        \x3c!-- /ko --\x3e\n      </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.hasFootItems  --\x3e\n      \x3c!-- ko foreach: { data: question.footItems, as: \'item\', afterRender: question.koAfterRender }  --\x3e\n        \x3c!-- ko component: { name: question.getItemValueWrapperComponentName(item), params: { componentData:  question.getItemValueWrapperComponentData(item), templateData: { name: question.itemComponent, data: item } } } --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n\n    \x3c!-- ko if: question.hasOther && question.isOtherSelected --\x3e\n      <div data-bind="css: question.getCommentAreaCss(true), template: { name: \'survey-other\', data: {\'question\': question, \'visible\': question.isOtherSelected } }"></div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.showClearButtonInContent --\x3e\n    <div>\n      <input\n        type="button"\n        data-bind="click:question.clearValueOnly, css: question.cssClasses.clearButton, value: question.clearButtonCaption"\n      />\n    </div>\n    \x3c!-- /ko --\x3e\n  </fieldset>\n<\/script>\n<script type="text/html" id="survey-radiogroup-item">\n  <div role="presentation" data-bind="css: question.getItemClass($data)">\n    <label data-bind="css: question.getLabelClass($data), event: { mousedown: question.koMouseDown }">\n      <input\n        type="radio"\n        data-bind="attr: { name: question.questionName, id: question.getItemId($data), \'aria-errormessage\': question.ariaErrormessage, readonly: question.isReadOnlyAttr}, checkedValue: $data.value, checked: question.renderedValue, enable: question.getItemEnabled($data), css: question.cssClasses.itemControl"\n      />\n      \x3c!-- ko if: question.cssClasses.materialDecorator --\x3e\n      <span data-bind="css: question.cssClasses.materialDecorator">\n        \x3c!-- ko if: question.itemSvgIcon --\x3e\n        <svg data-bind="css:question.cssClasses.itemDecorator">\n          <use data-bind="attr:{\'xlink:href\':question.itemSvgIcon}" xlink:href=\'\'></use>\n        </svg>\n        \x3c!-- /ko --\x3e\n      </span>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: !$data.hideCaption --\x3e\n      <span data-bind="css: question.getControlLabelClass($data)">\n        \x3c!-- ko template: { name: \'survey-string\', data: $data.locText } --\x3e\n        \x3c!-- /ko --\x3e\n      </span>\n      \x3c!-- /ko --\x3e\n    </label>\n  </div>\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="survey-question-rating">\n    <div data-bind="css: question.ratingRootCss">\n        <fieldset role="radiogroup">\n            <legend role="presentation" class="sv-hidden"></legend>\n            \x3c!-- ko if: question.hasMinLabel--\x3e\n            <span data-bind="css: question.cssClasses.minText">\n              \x3c!-- ko template: { name: \'survey-string\', data: question.locMinRateDescription } --\x3e\n              \x3c!-- /ko --\x3e\n              </span>\n            \x3c!-- /ko --\x3e\n            \x3c!-- ko foreach: question.renderedRateItems --\x3e\n              \x3c!-- ko component: { name: question.itemComponent, params: { question: question, item: $data, index: $index() } } --\x3e\n              \x3c!-- /ko --\x3e\n              \n            \x3c!-- /ko --\x3e\n            \x3c!-- ko if: question.hasMaxLabel--\x3e\n            <span data-bind="css: question.cssClasses.maxText">\n              \x3c!-- ko template: { name: \'survey-string\', data: question.locMaxRateDescription } --\x3e\n              \x3c!-- /ko --\x3e\n              </span>\n            \x3c!-- /ko --\x3e\n\n        </fieldset>\n    </div>\n  </fieldset>\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="survey-question-signaturepad">\n    <div data-bind="css: question.cssClasses.root, style: { width: question.renderedCanvasWidth }">\n        <div data-bind="css: question.cssClasses.placeholder, visible: $data.needShowPlaceholder()">\n            \x3c!-- ko template: { name: \'survey-string\', data: question.locRenderedPlaceholder } --\x3e\n            \x3c!-- /ko --\x3e\n        </div>\n        <div>\n            \x3c!-- ko if: question.backgroundImage --\x3e\n            <img data-bind="attr: { src: question.backgroundImage}, style: { width: question.renderedCanvasWidth }, css: question.cssClasses.backgroundImage">\n            \x3c!-- /ko --\x3e\n            <canvas tabindex=\'-1\' data-bind="css: question.cssClasses.canvas, event: { blur: question.koOnBlur }" ></canvas>\n        </div>\n        \x3c!-- ko if: question.canShowClearButton --\x3e\n        <div data-bind="css: question.cssClasses.controls">\n            <button type=\'button\'\n                data-bind="click: question.clearValueOnly, css: question.cssClasses.clearButton, attr: { title: question.clearButtonCaption }">\n                    \x3c!-- ko ifnot: question.cssClasses.clearButtonIconId --\x3e\n                        <span>âœ–</span>\n                    \x3c!-- /ko --\x3e\n                    \x3c!-- ko if: question.cssClasses.clearButtonIconId --\x3e\n                        <sv-svg-icon params="iconName: question.cssClasses.clearButtonIconId, size: \'auto\'"></sv-svg-icon>\n                    \x3c!-- /ko --\x3e\n            </button>\n        </div>\n        \x3c!-- /ko --\x3e\n        \x3c!-- ko if: question.showLoadingIndicator --\x3e\n        <div data-bind="css: question.cssClasses.loadingIndicator">\n        \x3c!-- ko component: { name: "sv-loading-indicator" } --\x3e\n        \x3c!-- /ko --\x3e\n        </div>\n        \x3c!-- /ko --\x3e\n    </div>\n<\/script>'},function(e,t){e.exports="<script type=\"text/html\" id=\"survey-question-text\">\n  \x3c!--ko if: !question.dataListId && !question.isReadOnlyRenderDiv()--\x3e\n    \x3c!-- ko template: { name: 'survey-question-text-input' } --\x3e\x3c!-- /ko --\x3e\n  \x3c!--/ko--\x3e\n  \x3c!--ko if: question.dataListId && !question.isReadOnlyRenderDiv()--\x3e\n  <div>\n    \x3c!-- ko template: { name: 'survey-question-text-input' } --\x3e\x3c!-- /ko --\x3e\n    <datalist data-bind=\"attr: {id: question.dataListId}\">\n    \x3c!-- ko foreach: question.dataList --\x3e\n      <option data-bind=\"value:$data\"></option>\n    \x3c!--/ko--\x3e\n    </datalist>\n  </div>\n  \x3c!--/ko--\x3e\n  \x3c!--ko if: question.isReadOnlyRenderDiv() --\x3e\n  <div data-bind=\"text: question.koReadOnlyValue\"></div>\n  \x3c!--/ko--\x3e\n<\/script>\n<script type=\"text/html\" id=\"survey-question-text-input\">\n  <input\n  data-bind=\"disable: question.isDisabledAttr, \n    style: question.inputStyle, \n    attr: { type: question.inputType, size: question.renderedInputSize, id: question.inputId, placeholder: question.renderedPlaceholder, maxLength: question.getMaxLength(), min: question.renderedMin, max: question.renderedMax, step: question.renderedStep, 'aria-required': question.a11y_input_ariaRequired, 'aria-invalid': question.ariaInvalid, 'aria-label': question.a11y_input_ariaLabel, 'aria-labelledby': question.a11y_input_ariaLabelledBy, 'aria-describedby': question.a11y_input_ariaDescribedBy, 'aria-invalid': question.a11y_input_ariaInvalid, 'aria-errormessage': question.a11y_input_ariaErrormessage, autocomplete: question.autocomplete, list:question.dataListId, readonly:question.isReadOnlyAttr }, \n    event: { keydown: koOnKeyDown, keyup: koOnKeyUp, change: koOnChange, compositionupdate: koOnCompositeUpdate, blur: koOnBlur, focus: koOnFocus },\n    value: question.koReadOnlyValue,\n    css: question.getControlClass()\"/>\n  \x3c!--ko if: question.getMaxLength() --\x3e\n  \x3c!-- ko component: { name: 'sv-character-counter', params: { counter: question.characterCounter, remainingCharacterCounter: question.cssClasses.remainingCharacterCounter } } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!--/ko--\x3e\n<\/script>"},function(e,t){e.exports='<script type="text/html" id="survey-question-buttongroup">\n  <div role="group" data-bind="css: question.cssClasses.root">\n      \x3c!-- ko foreach: question.visibleChoices --\x3e\n        \x3c!-- ko component: { name: \'sv-button-group-item\', params: { question: question, item: $data, index: $index } } --\x3e\n        \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n<\/script>\n'},function(e,t){e.exports='<script type="text/html" id="popup-pointer">\n  <span class="sv-popup__pointer" data-bind="style: { left: pointerTarget.left, top: pointerTarget.top }"></span>\n<\/script>'},function(e,t){e.exports="<div data-bind=\"css: cssRoot, style:{width: renderedWidth, maxWidth: renderedWidth}, event: { scroll: $data.onScroll }\">\n    <div data-bind=\"css: cssRootContent\">\n        <div data-bind=\"css: cssHeaderRoot, {cssRootCollapsedMod: isCollapsed}\">\n\n            \x3c!-- ko if: isCollapsed && !!locTitle --\x3e  \n            <div data-bind=\"css: cssHeaderTitleCollapsed, text: locTitle.koRenderedHtml\"></div>\n            \x3c!-- /ko --\x3e\n    \n            <div data-bind=\"css: cssHeaderButtonsContainer\">\n                \x3c!-- ko if: allowFullScreen --\x3e      \n                <div data-bind=\"click:doToggleFullScreen, css: cssHeaderFullScreenButton\">\n                    \x3c!-- ko if: isFullScreen--\x3e  \n                    \x3c!-- ko component: { name: 'sv-svg-icon', params: { iconName: 'icon-back-to-panel_16x16', size: '16' } } --\x3e\x3c!-- /ko --\x3e\n                    \x3c!-- /ko --\x3e\n                    \n                    \x3c!-- ko if: !isFullScreen--\x3e  \n                    \x3c!-- ko component: { name: 'sv-svg-icon', params: { iconName: 'icon-full-screen_16x16', size: '16' } } --\x3e\x3c!-- /ko --\x3e\n                    \x3c!-- /ko --\x3e\n                </div>\n                \x3c!-- /ko --\x3e\n                <div data-bind=\"click:doExpand, css: cssHeaderCollapseButton\">\n                    \x3c!-- ko if: isExpanded--\x3e  \n                    \x3c!-- ko component: { name: 'sv-svg-icon', params: { iconName: 'icon-minimize_16x16', size: '16' } } --\x3e\x3c!-- /ko --\x3e\n                    \x3c!-- /ko --\x3e\n                    \n                    \x3c!-- ko if: isCollapsed--\x3e  \n                    \x3c!-- ko component: { name: 'sv-svg-icon', params: { iconName: 'icon-restore_16x16', size: '16' } } --\x3e\x3c!-- /ko --\x3e\n                    \x3c!-- /ko --\x3e\n                </div>\n                \x3c!-- ko if: allowClose --\x3e      \n                <div data-bind=\"click:doHide, css: cssHeaderCloseButton\">\n                \x3c!-- ko component: { name: 'sv-svg-icon', params: { iconName: 'icon-close_16x16', size: '16' } } --\x3e\x3c!-- /ko --\x3e\n                </div>\n                \x3c!-- /ko --\x3e\n            </div>\n        </div>\n        <div data-bind=\"visible:isExpanded, css: cssBody\">\n            <survey params=\"survey: survey\"></survey>\n        </div>\n    </div>\n</div>"},function(e,t){e.exports="<div data-bind=\"css: cssClasses.controlLabel\">\n  \x3c!-- ko template: { name: 'survey-string', data: item.locText } --\x3e\n  \x3c!-- /ko --\x3e\n</div>"},function(e,t){e.exports="\x3c!-- ko if: model.hasActions --\x3e\n<div\n  data-bind=\"css: model.getRootCss(), click: handleClick ? function() { return true; } : undefined, clickBubble: handleClick ? false : undefined\"\n>\n  \x3c!-- ko foreach: model.renderedActions --\x3e\n  \x3c!-- ko component: { name: 'sv-action', params: { item: $data } } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!--/ko--\x3e\n</div>\n\x3c!--/ko--\x3e\n"},function(e,t){e.exports='\x3c!-- ko with: $data.item --\x3e\r\n<div data-bind="class: $data.getActionRootCss(), attr: { id: $data.id }">\r\n    \x3c!-- ko ifnot: $data.isEmpty --\x3e\r\n    <div class="sv-action__content">\r\n        \x3c!-- ko if: $data.needSeparator --\x3e\r\n        <sv-action-bar-separator></sv-action-bar-separator>\r\n        \x3c!-- /ko --\x3e\r\n        \x3c!-- ko ifnot: $data.template--\x3e\r\n        \x3c!-- ko component: { name: $data.component || \'sv-action-bar-item\', params: { item: $data } } --\x3e\r\n        \x3c!-- /ko --\x3e\r\n        \x3c!-- /ko --\x3e\r\n        \x3c!-- ko if: $data.template  --\x3e\r\n        \x3c!-- ko template: { name: $data.template, data: $data.data || $data } --\x3e\r\n        \x3c!-- /ko --\x3e\r\n        \x3c!-- /ko --\x3e\r\n    </div>\r\n    \x3c!-- /ko --\x3e\r\n</div>\r\n\x3c!-- /ko --\x3e'},function(e,t){e.exports="\x3c!-- ko with: $data.item --\x3e\n<button\n  type=\"button\"\n  data-bind=\"click: function(s, args) { $data.action($data, getIsTrusted(args)); }, key2click: { processEsc: false }, disable: $data.disabled, css: getActionBarItemCss(), attr: { title: $data.tooltip || $data.title, 'aria-checked': $data.ariaChecked, 'role': $data.ariaRole, 'aria-expanded': typeof $data.ariaExpanded === 'undefined' ? null : ($data.ariaExpanded ? 'true': 'false') }\"\n>\n  \x3c!-- ko if: $data.iconName --\x3e\n  \x3c!-- ko component: { name: 'sv-svg-icon', params: { css: $data.cssClasses.itemIcon, iconName: iconName, size: iconSize, title: $data.tooltip || $data.title } } --\x3e\x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: $data.hasTitle --\x3e\n  <span\n    data-bind=\"text: title, css: getActionBarItemTitleCss()\"\n  ></span>\n  \x3c!-- /ko --\x3e\n</button>\n\x3c!-- /ko --\x3e"},function(e,t){e.exports='\x3c!-- ko with: $data.model.item --\x3e\n<button type="button"\n  data-bind="click: function(s, args) { $data.action($data, getIsTrusted(args)); }, key2click: { processEsc: false }, css: getActionBarItemCss(), attr: { disabled: $data.enabled !== undefined && !ko.unwrap($data.enabled), title: $data.tooltip || $data.title, \'role\': $data.ariaRole }">\n  \x3c!-- ko if: $data.iconName --\x3e\n  \x3c!-- ko component: { name: \'sv-svg-icon\', params: { iconName: iconName, size: iconSize, title: $data.tooltip || $data.title, css: $data.cssClasses.itemIcon } } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: $data.hasTitle --\x3e\n  <span data-bind="text: title, css: getActionBarItemTitleCss()"></span>\n  \x3c!-- /ko --\x3e\n</button>\n<sv-popup params="{ model: popupModel, getTarget: $parent.getTarget }"></sv-popup>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports='<div class="sv-action-bar-separator" data-bind="css: $data.css"></div>'},function(e,t){e.exports='<div data-bind="css: question.cssClasses.rootCheckbox">\n  <div data-bind="css: question.getCheckboxItemCss()">\n    <label data-bind="css: question.cssClasses.checkboxLabel">\n      <input\n        type="checkbox"\n        data-bind="value: question.booleanValue, css: question.cssClasses.controlCheckbox, attr: {name: question.name, id: question.inputId, \'aria-required\': question.ariaRequired, \'aria-label\': question.ariaLabel, \'aria-invalid\': question.ariaInvalid, \'aria-errormessage\': question.ariaErrormessage, readonly: question.isReadOnlyAttr}, checked: question.booleanValue, surveyProp: {indeterminate: question.isIndeterminate}, enable: !question.isDisabledAttr"\n      />\n      <span data-bind="css: question.cssClasses.checkboxMaterialDecorator">\n        \x3c!-- ko if: question.svgIcon --\x3e\n        <svg data-bind="css:question.cssClasses.checkboxItemDecorator">\n          <use data-bind="attr:{\'xlink:href\':question.svgIcon}" xlink:href=\'\'></use>\n        </svg>\n        \x3c!-- /ko --\x3e\n        <span class="check"></span>\n      </span>\n      <span\n        data-bind="if: question.isLabelRendered, css: question.cssClasses.checkboxControlLabel, attr: {id: question.labelRenderedAriaID}"\n      >\n        \x3c!-- ko component: { name: \'sv-title-actions\', params: {element: question } } --\x3e\x3c!-- /ko --\x3e\n      </span>\n    </label>\n    \x3c!-- ko if: question.canRenderLabelDescription --\x3e\n    <div data-bind="css: question.cssDescription, attr: {\'id\': question.ariaDescriptionId}">\n      \x3c!-- ko template: { name: \'survey-string\', data: question.locDescription } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n</div>\n'},function(e,t){e.exports='  <div role="presentation" data-bind="class: question.getRadioItemClass(question.cssClasses, $data.value)">\n    <label data-bind="css: question.cssClasses.radioLabel">\n      <input\n        type="radio"\n        data-bind="event: { change: handleChange }, attr: { name: question.name, \'aria-errormessage\': question.ariaErrormessage, value: \'\'+$data.value, checked: $data.value === question.booleanValue, readonly: question.isReadOnlyAttr }, enable: !question.isDisabledAttr, css: question.cssClasses.itemRadioControl"\n      />\n      \x3c!-- ko if: question.cssClasses.materialRadioDecorator --\x3e\n      <span data-bind="css: question.cssClasses.materialRadioDecorator">\n        \x3c!-- ko if: question.itemSvgIcon --\x3e\n        <svg data-bind="css:question.cssClasses.itemRadioDecorator">\n          <use data-bind="attr:{\'xlink:href\':question.itemSvgIcon}" xlink:href=\'\'></use>\n        </svg>\n        \x3c!-- /ko --\x3e\n      </span>\n      \x3c!-- /ko --\x3e\n      <span data-bind="css: question.cssClasses.radioControlLabel">\n        \x3c!-- ko template: { name: \'survey-string\', data: $data.locText } --\x3e\n        \x3c!-- /ko --\x3e\n      </span>\n    </label>\n  </div>\n\n'},function(e,t){e.exports="<div data-bind=\"css: question.cssClasses.rootRadio\">\n  <fieldset role=\"presentation\" data-bind=\"css: question.cssClasses.radioFieldset\">\n    \x3c!-- ko ifnot: question.swapOrder --\x3e\n    \x3c!-- ko component: { name: 'sv-boolean-radio-item', params: { value: false, locText: question.locLabelFalse, question: question } } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- ko component: { name: 'sv-boolean-radio-item', params: { value: true, locText: question.locLabelTrue, question: question } } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.swapOrder --\x3e\n    \x3c!-- ko component: { name: 'sv-boolean-radio-item', params: { value: true, locText: question.locLabelTrue, question: question } } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- ko component: { name: 'sv-boolean-radio-item', params: { value: false, locText: question.locLabelFalse, question: question } } --\x3e\x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n  </fieldset>\n</div>\n"},function(e,t){e.exports="\x3c!-- ko template: { name: 'survey-panel', data: question, as: 'question', afterRender: question.koPanelAfterRender } --\x3e\x3c!-- /ko --\x3e"},function(e,t){e.exports='<div>\n  \x3c!-- ko with: popupViewModel --\x3e\n  <div class="sv-popup" tabindex="-1"\n    data-bind="visible: isVisible, click: function(data, event) { clickOutside(event); return true; }, class: styleClass, event: { keydown: function(data, event) { onKeyDown(event); return true; } }">\n    <div class="sv-popup__container"\n      data-bind="style: { left: left, top: top, height: height, minWidth: minWidth, width: width }, click: function() { return true; }, clickBubble: false">\n      <div class="sv-popup__shadow">\n        \x3c!-- ko if: $data.showHeader --\x3e\n        \x3c!-- ko template: { name: $data.popupHeaderTemplate, data: $data } --\x3e\n        \x3c!-- /ko --\x3e\n        \x3c!-- /ko --\x3e\n        <div class="sv-popup__body-content">\n          \x3c!-- ko if: !!title  --\x3e\n          <div class="sv-popup__body-header" data-bind="text: title"></div>\n          \x3c!-- /ko --\x3e\n          <div class="sv-popup__scrolling-content">\n            <div class="sv-popup__content"\n              data-bind="component: { name: contentComponentName, params: contentComponentData }"></div>\n          </div>\n          \x3c!-- ko if: showFooter  --\x3e\n          <div class="sv-popup__body-footer">\n            \x3c!-- ko component: { name: "sv-action-bar", params: { model: $data.footerToolbar } } --\x3e\n            \x3c!-- /ko --\x3e\n          </div>\n          \x3c!-- /ko --\x3e\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- /ko --\x3e\n</div>\n'},function(e,t){e.exports='<div data-bind="css: model.getRootCss(container), style: { maxWidth: model.progressWidth }" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-label="progress">\n    \x3c!-- ko if: canShowHeader --\x3e\n    <div data-bind="css: survey.css.progressButtonsHeader">\n        <div data-bind="css: survey.css.progressButtonsPageTitle, text: model.headerText, attr: { title: model.headerText }"></div>\n    </div>\n    \x3c!-- /ko --\x3e\n    <div data-bind="css: survey.css.progressButtonsContainer">\n        <div data-bind="css: getScrollButtonCss(true), click: clickScrollButton.bind($data, $element.nextElementSibling, true)" role="button"></div>\n        <div data-bind="css: survey.css.progressButtonsListContainer">\n            <ul data-bind="foreach: survey.visiblePages, css: survey.css.progressButtonsList">\n                <li data-bind="css: $parent.model.getListElementCss($index()), click: $parent.model.isListElementClickable($index()) ? $parent.model.clickListElement : null, attr: { \'data-page-number\' : $parent.model.getItemNumber($data) }">\n                    <div data-bind="css: css.progressButtonsConnector"></div>\n                    \x3c!-- ko if: $parent.canShowItemTitles --\x3e\n                    <div data-bind="css: css.progressButtonsPageTitle, attr: { title: renderedNavigationTitle }">\x3c!-- ko template: { name: \'survey-string\', data: locNavigationTitle } --\x3e\x3c!-- /ko --\x3e</div>\n                    <div data-bind="css: css.progressButtonsPageDescription, text: locNavigationDescription.koRenderedHtml(), attr: { title: locNavigationDescription.koRenderedHtml() }"></div>\n                    \x3c!-- /ko --\x3e\n                    <div data-bind="css: css.progressButtonsButton"><div data-bind="css: css.progressButtonsButtonBackground"></div><div data-bind="css: css.progressButtonsButtonContent"></div><span data-bind="text: $parent.model.getItemNumber($data)"></span></div>\n                </li>\n            </ul>\n        </div>\n        <div data-bind="css: getScrollButtonCss(false), click: clickScrollButton.bind($data, $element.previousElementSibling, false)" role="button"></div>\n    </div>\n    \x3c!-- ko if: canShowFooter --\x3e\n    <div data-bind="css: survey.css.progressButtonsFooter">\n        <div data-bind="css: survey.css.progressButtonsPageTitle, text: model.footerText, attr: { title: model.footerText }"></div>\n    </div>\n    \x3c!-- /ko --\x3e\n</div>'},function(e,t){e.exports='<div data-bind="css: getProgressCssClasses()">\n    <div data-bind="css: model.css.progressBar, style: { width: model.progressValue + \'%\' }"\n        role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-label="progress">\n        <span data-bind="text: model.progressText, css: getProgressTextInBarCss(model.css)"></span>\n    </div>\n    <span data-bind="text: model.progressText, css: getProgressTextUnderBarCss(model.css)"></span>\n</div>'},function(e,t){e.exports='\x3c!-- ko with: tocModel --\x3e\n<div data-bind="css: containerCss">\n    \x3c!-- ko ifnot: isMobile --\x3e\n    <sv-list params="model: listModel"></sv-list>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: isMobile --\x3e\n    <div class="" data-bind="click: togglePopup, key2click">\n        <sv-svg-icon class="" params="iconName: icon, size: 24"></sv-svg-icon>\n        <sv-popup params="model: popupModel"></sv-popup>\n    </div>\n    \x3c!-- /ko --\x3e\n</div>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports='\x3c!-- ko if: components.length > 0 --\x3e\n\x3c!-- ko if: $data.needRenderWrapper --\x3e\n<div data-bind="css: css">\n  \x3c!-- ko foreach: components --\x3e\n  \x3c!-- ko if: $data.component && !$data.template --\x3e\n  \x3c!-- ko component: { name: component, params: { survey: $parent.survey, model: $data.data, container: $parent.container } } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: $data.template --\x3e\n  \x3c!-- ko template: { name: template, data: $data.data } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n</div>\n\x3c!-- /ko --\x3e\n\x3c!-- ko ifnot: $data.needRenderWrapper --\x3e\n  \x3c!-- ko foreach: components --\x3e\n  \x3c!-- ko if: $data.component && !$data.template --\x3e\n  \x3c!-- ko component: { name: component, params: { survey: $parent.survey, model: $data.data, container: $parent.container } } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: $data.template --\x3e\n  \x3c!-- ko template: { name: template, data: $data.data } --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e'},function(e,t){e.exports="\x3c!-- ko if: templateData.name --\x3e\n  \x3c!-- ko template: { name: templateData.name, data: templateData.data, afterRender: templateData.afterRender } --\x3e\n  \x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e\n\x3c!-- ko ifnot: templateData.name --\x3e\n  \x3c!-- ko template: { nodes: templateData.nodes || $componentTemplateNodes, data: templateData.data, afterRender: templateData.afterRender } --\x3e\n  \x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e\n"},function(e,t){e.exports="\x3c!-- ko if: element.isTitleRenderedAsString --\x3e\n  \x3c!-- ko template: { name: 'survey-string', data: element.locTitle } --\x3e\x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e\n\x3c!-- ko ifnot: element.isTitleRenderedAsString --\x3e\n  \x3c!-- ko if: element.isRequireTextOnStart --\x3e\n  <span\n    data-bind=\"css: element.cssClasses.requiredText || (element.cssClasses.panel && element.cssClasses.panel.requiredText), text: element.requiredText, attr: { 'aria-hidden': true }\"\n  ></span>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: element.no --\x3e\n  <span\n    style=\"position: static;\"\n    data-bind=\"css: element.cssClasses.number || (element.cssClasses.panel && element.cssClasses.panel.number), text: element.no, attr: { 'aria-hidden': true }\"\n  ></span>\n  <span>&nbsp</span>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: element.isRequireTextBeforeTitle --\x3e\n  <span\n    data-bind=\"css: element.cssClasses.requiredText || (element.cssClasses.panel && element.cssClasses.panel.requiredText), text: element.requiredText, attr: { 'aria-hidden': true }\"\n  ></span>\n  <span>&nbsp</span>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko template: { name: 'survey-string', data: element.locTitle } --\x3e\x3c!-- /ko --\x3e\n  \x3c!-- ko if: element.isRequireTextAfterTitle --\x3e\n  <span>&nbsp</span>\n  <span\n    data-bind=\"css: element.cssClasses.requiredText || (element.cssClasses.panel && element.cssClasses.panel.requiredText), text: element.requiredText, attr: { 'aria-hidden': true }\"\n  ></span>\n  \x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e"},function(e,t){e.exports="\x3c!-- ko ifnot: element.hasTitleActions --\x3e\n  \x3c!-- ko component: { name: 'survey-element-title-content', params: {element: element } } --\x3e\x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e\n\x3c!-- ko if: element.hasTitleActions --\x3e\n<div class=\"sv-title-actions\">\n  <span class=\"sv-title-actions__title\">\n    \x3c!-- ko component: { name: 'survey-element-title-content', params: {element: element } } --\x3e\x3c!-- /ko --\x3e\n  </span>\n  \x3c!-- ko component: { name: 'sv-action-bar', params: { model: toolbar } } --\x3e\n  \x3c!-- /ko --\x3e\n</div>\n\x3c!-- /ko --\x3e"},function(e,t){e.exports='\x3c!-- <input class="sv-string-editor" data-bind="value: editValue" /> --\x3e\n\n\x3c!-- ko ifnot: koHasHtml --\x3e\n<span class="sv-string-editor" data-bind="text: editValue, event: { blur: onInput, click: onClick, clickBubble: false }" contenteditable="true"></span>\n\x3c!-- /ko --\x3e\n\x3c!-- ko if: koHasHtml --\x3e\n<span class="sv-string-editor" data-bind="html: editValue, event: { blur: onInput, click: onClick, clickBubble: false }" contenteditable="true"></span>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports='\x3c!-- ko ifnot: locString.koHasHtml --\x3e\n<span class="sv-string-viewer" data-bind="text: locString.koRenderedHtml, css: {\'sv-string-viewer--multiline\': locString.allowLineBreaks}"></span>\n\x3c!-- /ko --\x3e\n\x3c!-- ko if: locString.koHasHtml --\x3e\n<span class="sv-string-viewer" data-bind="html: locString.koRenderedHtml, css: {\'sv-string-viewer--multiline\': locString.allowLineBreaks}"></span>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports='\x3c!-- ko with: survey --\x3e\n<div data-bind="css: logoClassNames">\n  <img data-bind="css: css.logoImage, attr: { src: locLogo.koRenderedHtml, width: renderedLogoWidth, height: renderedLogoHeight, alt: locTitle.renderedHtml }, style: { objectFit: logoFit, width: renderedStyleLogoWidth, height: renderedStyleLogoHeight }">\n</div>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports='<div class="sv-skeleton-element" data-bind="attr: { id: element.id }">\n</div>'},function(e,t){e.exports='<div data-bind="text: counter.remainingCharacterCounter, css: remainingCharacterCounter"></div>'},function(e,t){e.exports="<div data-bind=\"css: question.cssClasses.rootDropdown\">\n  \x3c!-- ko component: { name: 'sv-dropdown', params: { question: question } } --\x3e\n  \x3c!-- /ko --\x3e\n</div>\n"},function(e,t){e.exports='<div class="sd-rating-dropdown-item">\n  <span class="sd-rating-dropdown-item_text" data-bind="text: item.title"></span>\n  \x3c!-- ko if: !!item.description --\x3e\n  <div class="sd-rating-dropdown-item_description">\n    \x3c!-- ko template: { name: \'survey-string\', data: item.description } --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n</div>'},function(e,t){e.exports="<label data-bind=\"css: question.getItemClassByText(item.itemValue, item.text),  event: { mousedown: question.koMouseDown }\">\n  <input\n  type=\"radio\"\n  class=\"sv-visuallyhidden\"\n  data-bind=\"attr: { name: question.questionName, id: question.getInputId(index), value: item.value, readonly: question.isReadOnlyAttr, 'aria-required': question.ariaRequired, 'aria-label': question.ariaLabel, 'aria-invalid': question.ariaInvalid, 'aria-errormessage': question.ariaErrormessage }, checkedValue: item.value, enable: !question.isDisabledAttr, event: { click: function(data, event) { question.setValueFromClick(event.target.value); return true; } }\"\n  />\n  <span data-bind=\"css: question.cssClasses.itemText\">\n  \x3c!-- ko template: { name: 'survey-string', data: item.locText } --\x3e\n  \x3c!-- /ko --\x3e\n  </span>\n</label>\n"},function(e,t){e.exports="<label data-bind=\"css: question.getItemClass(item.itemValue, item.highlight), event: { mouseover: function () { question.onItemMouseIn(item); }, mouseleave: function () { question.onItemMouseOut(item);}, mousedown: question.koMouseDown }\">\n  <input\n  type=\"radio\"\n  class=\"sv-visuallyhidden\"\n  data-bind=\"attr: { name: question.questionName, id: question.getInputId(index), value: item.value, readonly: question.isReadOnlyAttr, 'aria-required': question.ariaRequired, 'aria-label': question.ariaLabel, 'aria-invalid': question.ariaInvalid, 'aria-errormessage': question.ariaErrormessage }, checkedValue: item.value, enable: !question.isDisabledAttr, event: { click: function(data, event) { question.setValueFromClick(event.target.value); return true; } }\"\n  />\n  \x3c!-- ko component: { name: 'sv-svg-icon', params: { css: 'sv-star', iconName: question.itemStarIcon, size: 'auto', title: item.text } } --\x3e\x3c!-- /ko --\x3e\n  \x3c!-- ko component: { name: 'sv-svg-icon', params: { css: 'sv-star-2', iconName: question.itemStarIconAlt, size: 'auto', title: item.text } } --\x3e\x3c!-- /ko --\x3e\n</label>"},function(e,t){e.exports="<label data-bind=\"style: question.getItemStyle(item.itemValue, item.highlight), css: question.getItemClass(item.itemValue, item.highlight), event: { mouseover: function () { question.onItemMouseIn(item); }, mouseleave: function () { question.onItemMouseOut(item);}, mousedown: question.koMouseDown }\">\n  <input\n  type=\"radio\"\n  class=\"sv-visuallyhidden\"\n  data-bind=\"attr: { name: question.questionName, id: question.getInputId(index), value: item.value, readonly: question.isReadOnlyAttr, 'aria-required': question.ariaRequired, 'aria-label': question.ariaLabel, 'aria-invalid': question.ariaInvalid, 'aria-errormessage': question.ariaErrormessage }, checkedValue: item.value, enable: !question.isDisabledAttr, event: { click: function(data, event) { question.setValueFromClick(event.target.value); return true; } }\"\n  />\n  \x3c!-- ko component: { name: 'sv-svg-icon', params: { iconName: question.getItemSmileyIconName(item.itemValue), size: 'auto', title: item.text } } --\x3e\x3c!-- /ko --\x3e\n</label>"},function(e,t){e.exports="<div data-bind=\"css: question.cssClasses.selectWrapper, click: click\">\n  \x3c!-- ko ifnot: question.isReadOnly --\x3e\n  <div data-bind=\"css: question.getControlClass(),\n    event: { keydown: keyhandler, blur: blur },\n    attr: { \n      id: question.inputId, \n      required: question.isRequired, \n      tabindex: model.noTabIndex ? undefined : 0,\n      disabled: question.isDisabledAttr,\n      role: question.ariaRole,\n      'aria-required': question.ariaRequired, \n      'aria-label': question.ariaLabel, \n      'aria-invalid': question.ariaInvalid, \n      'aria-errormessage': question.ariaErrormessage,\n      'aria-expanded': question.ariaExpanded,\n      'aria-controls': model.listElementId,\n      'aria-activedescendant': model.ariaActivedescendant,\n    },\">\n    \x3c!-- ko if: model.showHintPrefix --\x3e\n    <div data-bind=\"css: question.cssClasses.hintPrefix\">\n      <span data-bind=\"text: model.hintStringPrefix\"></span>\n    </div>\n    \x3c!-- /ko --\x3e\n    <div data-bind=\"css: question.cssClasses.controlValue\">\n      \x3c!-- ko if: model.showHintString --\x3e\n      <div data-bind=\"css: question.cssClasses.hintSuffix\">\n      <span style=\"visibility: hidden\" data-bind=\"text: model.inputStringRendered\"></span>\n      <span data-bind=\"text: model.hintStringSuffix\"></span>\n      </div>\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.showInputFieldComponent --\x3e\n      \x3c!-- ko component: { name: question.inputFieldComponentName, params: { item: model.getSelectedAction(), question: question } } --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.showSelectedItemLocText --\x3e\n      \x3c!-- ko template: { name: 'survey-string', data: question.selectedItemLocText } --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      <input type=\"text\" autocomplete=\"off\" data-bind=\"\n      textInput: model.inputStringRendered, \n      css: question.cssClasses.filterStringInput, \n      attr: {\n        'aria-expanded': question.ariaExpanded,\n        'aria-controls': model.listElementId,\n        'aria-activedescendant': model.ariaActivedescendant,\n        'aria-label': question.a11y_input_ariaLabel,\n        'aria-labelledby': question.a11y_input_ariaLabelledBy,\n        'aria-describedby': question.a11y_input_ariaDescribedBy,\n        placeholder: model.placeholderRendered, \n        readonly: model.filterReadOnly || undefined, \n        role: model.filterStringEnabled ? question.ariaRole : undefined,\n        tabindex: model.noTabIndex ? undefined : -1,\n        disabled: question.isDisabledAttr,\n        id: question.getInputId(), \n        inputmode: model.inputMode\n      },\n      event: { blur: blur, focus: focus }\"></input>\n    </div>\n    \x3c!-- ko if: (question.allowClear && question.cssClasses.cleanButtonIconId) --\x3e\n    <div data-bind=\"css: question.cssClasses.cleanButton, click: clear, visible: question.showClearButton\" aria-hidden=\"true\">\n      \x3c!-- ko component: { name: 'sv-svg-icon', params: { css: question.cssClasses.cleanButtonSvg, iconName: question.cssClasses.cleanButtonIconId, size: 'auto', title: question.clearCaption } } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- ko component: { name: \"sv-popup\", params: { model: model.popupModel }} --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.isReadOnly --\x3e\n  <div data-bind=\"css: question.getControlClass(), attr: { \n      id: question.inputId,\n      'aria-label': question.a11y_input_ariaLabel,\n      'aria-labelledby': question.a11y_input_ariaLabelledBy,\n      'aria-describedby': question.a11y_input_ariaDescribedBy,\n      tabindex: model.isDisabledAttr ? undefined : 0,\n      disabled: model.isDisabledAttr\n    } \">\n    \x3c!-- ko if: question.selectedItemLocText --\x3e\n    \x3c!-- ko template: { name: 'survey-string', data: question.selectedItemLocText } --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n    <div data-bind=\"text: question.readOnlyText\"></div>\n  </div>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.cssClasses.chevronButtonIconId --\x3e\n  <div data-bind=\"css: question.cssClasses.chevronButton, event: {pointerdown: chevronPointerDown}\" aria-hidden=\"true\">\n    \x3c!-- ko component: { name: 'sv-svg-icon', params: { css: question.cssClasses.chevronButtonSvg, iconName: question.cssClasses.chevronButtonIconId, size: 'auto' } } --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n</div>"},function(e,t){e.exports="<div data-bind=\"css: question.renderCssRoot\">\n  <div data-bind=\"css: question.cssClasses.selectWrapper\">\n    \x3c!-- ko ifnot: question.isReadOnly --\x3e\n    <select data-bind=\"options: question.visibleChoices, \n    optionsValue: 'value', \n    optionsText: 'koText', \n    optionsCaption: question.allowClear ? question.locPlaceholder.koRenderedHtml : undefined, \n    optionsAfterRender: question.koDisableOption, \n    attr: {id: question.inputId, autocomplete: question.autocomplete, required: question.isRequired, 'aria-required': question.ariaRequired, 'aria-label': question.ariaLabel, 'aria-invalid': question.ariaInvalid, 'aria-errormessage': question.ariaErrormessage},\n    click: click,\n    event: { keyup: keyup },\n    disable: question.isInputReadOnly, \n    value: question.renderedValue, \n    valueAllowUnset: true, \n    css: question.getControlClass()\">\n    </select>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.isReadOnly --\x3e\n    <div disabled\n      data-bind=\"attr: {id: question.inputId}, text: question.readOnlyText, css: question.getControlClass()\">\n    </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: question.cssClasses.chevronButtonIconId --\x3e\n    <div data-bind=\"css: question.cssClasses.chevronButton\">\n      \x3c!-- ko component: { name: 'sv-svg-icon', params: { css: question.cssClasses.chevronButtonSvg, iconName: question.cssClasses.chevronButtonIconId, size: 'auto' } } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- ko if: question.isOtherSelected --\x3e\n  <div data-bind=\"css: question.getCommentAreaCss(true), template: { name: 'survey-other', data: {'question': question, 'visible': question.isOtherSelected } }, style: {display: question.isFlowLayout ? 'inline': ''}\">\n  </div>\n  \x3c!-- /ko --\x3e\n</div>"},function(e,t){e.exports='<div class="sv-tagbox__item">\n  <div class="sv-tagbox__item-text">\n    \x3c!-- ko template: { name: \'survey-string\', data: item.locText } --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n  <div data-bind="css: question.cssClasses.cleanItemButton, click: removeItem">\n    <sv-svg-icon params="iconName: question.cssClasses.cleanItemButtonIconId, css: question.cssClasses.cleanItemButtonSvg, size:\'auto\' "></sv-svg-icon>\n  </div>\n</div>'},function(e,t){e.exports="<div data-bind=\"css: question.cssClasses.selectWrapper, click: click\">\n  \x3c!-- ko ifnot: question.isReadOnly --\x3e\n  <div data-bind=\"css: question.getControlClass(),\n    event: { keydown: keyhandler, blur: blur },\n    attr: { \n      id: question.inputId, \n      required: question.isRequired, \n      tabindex: model.noTabIndex ? undefined : 0,\n      disabled: question.isDisabledAttr,\n      role: question.ariaRole,\n      'aria-required': question.ariaRequired, \n      'aria-label': question.ariaLabel, \n      'aria-invalid': question.ariaInvalid, \n      'aria-errormessage': question.ariaErrormessage,\n      'aria-expanded': question.ariaExpanded,\n      'aria-controls': model.listElementId,\n      'aria-activedescendant': model.ariaActivedescendant, \n    },\">\n    <div data-bind=\"css: question.cssClasses.controlValue\">\n      \x3c!-- ko foreach: question.selectedChoices --\x3e\n      \x3c!-- ko component: { name: 'sv-tagbox-item', params: { item: $data, question: question } } --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      <div data-bind=\"css: question.cssClasses.hint\">\n        \x3c!-- ko if: model.showHintPrefix --\x3e\n        <div data-bind=\"css: question.cssClasses.hintPrefix\">\n          <span data-bind=\"text: model.hintStringPrefix\"></span>\n        </div>\n        \x3c!-- /ko --\x3e\n        <div data-bind=\"css: question.cssClasses.hintSuffixWrapper\">\n          \x3c!-- ko if: model.showHintString --\x3e\n          <div data-bind=\"css: question.cssClasses.hintSuffix\">\n            <span style=\"visibility: hidden\" data-bind=\"text: model.inputStringRendered\"></span>\n            <span data-bind=\"text: model.hintStringSuffix\"></span>\n            </div>\n          \x3c!-- /ko --\x3e\n          <input type=\"text\" autocomplete=\"off\" data-bind=\"textInput: model.inputStringRendered, \n          css: question.cssClasses.filterStringInput, \n          attr: { \n            inputmode: model.inputMode,\n            size: !model.inputStringRendered ? 1 : null, \n            id: question.getInputId(), \n            role: model.filterStringEnabled ? question.ariaRole : undefined,\n            'aria-expanded': question.ariaExpanded,\n            'aria-controls': model.listElementId,\n            'aria-activedescendant': model.ariaActivedescendant,\n            'aria-label': question.a11y_input_ariaLabel,\n            'aria-labelledby': question.a11y_input_ariaLabelledBy,\n            'aria-describedby': question.a11y_input_ariaDescribedBy,\n            placeholder: model.filterStringPlaceholder, \n            disabled: question.isDisabledAttr,\n            readonly: model.filterReadOnly\n          },\n          event: { keydown: inputKeyHandler, blur: blur, focus: focus }\"></input>\n        </div>\n      </div>\n    </div>\n    \x3c!-- ko if: (question.allowClear && question.cssClasses.cleanButtonIconId) --\x3e\n    <div data-bind=\"css: question.cssClasses.cleanButton, click: clear, visible: question.showClearButton\" aria-hidden=\"true\">\n      \x3c!-- ko component: { name: 'sv-svg-icon', params: { css: question.cssClasses.cleanButtonSvg, iconName: question.cssClasses.cleanButtonIconId, size: 'auto', title: question.clearCaption } } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- ko component: { name: \"sv-popup\", params: { model: model.popupModel }} --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.isReadOnly --\x3e\n  <div disabled data-bind=\"css: question.getControlClass(), attr: {\n    id: question.inputId,\n    'aria-label': question.a11y_input_ariaLabel,\n    'aria-labelledby': question.a11y_input_ariaLabelledBy,\n    'aria-describedby': question.a11y_input_ariaDescribedBy,\n    tabindex: model.isDisabledAttr ? undefined : 0,\n    disabled: model.isDisabledAttr } \">\n    \x3c!-- ko if: question.locReadOnlyText --\x3e\n    \x3c!-- ko template: { name: 'survey-string', data: question.locReadOnlyText } --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: question.cssClasses.chevronButtonIconId --\x3e\n  <div data-bind=\"css: question.cssClasses.chevronButton, event: {pointerdown: chevronPointerDown}\" aria-hidden=\"true\">\n    \x3c!-- ko component: { name: 'sv-svg-icon', params: { css: question.cssClasses.chevronButtonSvg, iconName: question.cssClasses.chevronButtonIconId, size: 'auto' } } --\x3e\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n</div>"},function(e,t){e.exports='<div data-bind="css: css, style: style">\n  <div class="sv-header__cell-content" data-bind="style: contentStyle">\n    \x3c!-- ko if: showLogo --\x3e\n    <div class="sv-header__logo">\n    \x3c!-- ko component: { name: survey.getElementWrapperComponentName(survey, \'logo-image\'), params: survey.getElementWrapperComponentData(survey, \'logo-image\') } --\x3e\n    \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: showTitle --\x3e\n    <div class="sv-header__title" data-bind="style: { maxWidth: textAreaWidth }">\n    \x3c!-- ko component: { name: \'survey-element-title\', params: { element: survey } } --\x3e\n    \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- /ko --\x3e\n    \x3c!-- ko if: showDescription --\x3e\n    <div class="sv-header__description" data-bind="style: { maxWidth: textAreaWidth }">\n      <div data-bind="css: survey.css.description">\n        \x3c!-- ko template: { name: \'survey-string\', data: survey.locDescription } --\x3e\n        \x3c!-- /ko --\x3e\n      </div>\n    </div>\n    \x3c!-- /ko --\x3e\n  </div>\n</div>\n'},function(e,t){e.exports='<div class="sv-header--mobile">\n  \x3c!-- ko if: survey.hasLogo --\x3e\n  <div class="sv-header__logo">\n  \x3c!-- ko component: { name: survey.getElementWrapperComponentName(survey, \'logo-image\'), params: survey.getElementWrapperComponentData(survey, \'logo-image\') } --\x3e\n  \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: survey.hasTitle --\x3e\n  <div class="sv-header__title" data-bind="style: { maxWidth: textAreaWidth }">\n  \x3c!-- ko component: { name: \'survey-element-title\', params: { element: survey } } --\x3e\n  \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko if: survey.renderedHasDescription --\x3e\n  <div class="sv-header__description" data-bind="style: { maxWidth: textAreaWidth }">\n    <div data-bind="css: survey.css.description">\n      \x3c!-- ko template: { name: \'survey-string\', data: survey.locDescription } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n  </div>\n  \x3c!-- /ko --\x3e\n</div>\n'},function(e,t){e.exports="\x3c!-- ko if: (survey.headerView === 'advanced') --\x3e\n<div data-bind=\"css: model.headerClasses, style: { height: model.renderedHeight }\">\n  \x3c!-- ko if: !!model.backgroundImage --\x3e\n  <div data-bind=\"style: model.backgroundImageStyle, css: model.backgroundImageClasses\"></div>\n  \x3c!-- /ko --\x3e\n  \x3c!-- ko ifnot: survey.isMobile --\x3e\n  <div data-bind=\"css: model.contentClasses, style: { maxWidth: model.maxWidth }\">\n  \x3c!-- ko foreach: model.cells --\x3e\n    \x3c!-- ko component: { name: 'sv-header-cell', params: { model: $data } } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!--/ko--\x3e\n  </div>\n  \x3c!--/ko--\x3e\n  \x3c!-- ko if: survey.isMobile --\x3e\n    \x3c!-- ko component: { name: 'sv-header-mobile', params: { model: model } } --\x3e\n    \x3c!-- /ko --\x3e\n  \x3c!--/ko--\x3e\n  </div>\n\x3c!-- /ko --\x3e"},function(e,t){e.exports="<label tabindex=\"0\" data-bind=\"css: question.koChooseFileCss, key2click, click: function(d, e) { question.chooseFile(e); }, attr: { for: question.inputId, 'aria-label': question.koGetChooseButtonText() }\">\n  \x3c!-- ko if: question.cssClasses.chooseFileIconId --\x3e\n    \x3c!-- ko component: { name: 'sv-svg-icon', params: { title: question.koGetChooseButtonText(), iconName: question.cssClasses.chooseFileIconId, size: 'auto' } } --\x3e\x3c!-- /ko --\x3e\n  \x3c!-- /ko --\x3e\n  <span data-bind=\"text: question.koGetChooseButtonText()\"></span>\n</label>"},function(e,t){e.exports='\x3c!-- ko if: question.koHasValue && question.showPreviewContainer --\x3e\n<div data-bind="css: question.cssClasses.fileList, foreach: question.koData, visible: question.koHasValue">\n  <span data-bind="click: question.dodownloadFromContainer, visible: question.isPreviewVisible($index()), css: question.cssClasses.previewItem">\n    \x3c!-- ko template: { name: \'survey-question-file-sign\', data: {question: question, item: $data, fileSignCss: question.cssClasses.fileSign} } --\x3e\x3c!-- /ko --\x3e\n    <div data-bind="css: question.getImageWrapperCss($data)">\n      \x3c!-- ko if: question.canPreviewImage($data) --\x3e\n      <img data-bind="attr: { src: $data.content }, style : { height: question.imageHeight, width: question.imageWidth }" alt="File preview">\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: question.defaultImage($data) --\x3e\n      \x3c!-- ko component: { name: \'sv-svg-icon\', params: { css: question.cssClasses.defaultImage, iconName: question.cssClasses.defaultImageIconId, size: \'auto\' } } --\x3e\x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n      \x3c!-- ko if: $data.name --\x3e\n      \x3c!-- ko ifnot: question.isReadOnly --\x3e\n      <div data-bind="click: question.doremovefile, css: question.getRemoveButtonCss()">\n          <span data-bind="css: question.cssClasses.removeFile, text: question.removeFileCaption"></span>\n          \x3c!-- ko if: question.cssClasses.removeFileSvgIconId --\x3e\n            \x3c!-- ko component: { name: \'sv-svg-icon\', params: { css: question.cssClasses.removeFileSvg, title: question.removeFileCaption, iconName: question.cssClasses.removeFileSvgIconId, size: \'auto\' } } --\x3e\x3c!-- /ko --\x3e\n          \x3c!-- /ko --\x3e\n      </div>\n      \x3c!-- /ko --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    \x3c!-- ko template: { name: \'survey-question-file-sign\', data: {question: question, item: $data, fileSignCss: question.cssClasses.fileSignBottom} } --\x3e\x3c!-- /ko --\x3e\n  </span>\n</div>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports='<div data-bind="css: model.cssClasses.root">\n  \x3c!-- ko if: $data.model.showFilter --\x3e\n  <div data-bind="css: model.cssClasses.filter">\n    <div data-bind="css: model.cssClasses.filterIcon">\n      \x3c!-- ko component: { name: \'sv-svg-icon\', params: { iconName: \'icon-search\', size: \'auto\' }  } --\x3e\n      \x3c!-- /ko --\x3e\n    </div>\n    <input type="text" \n      data-bind="css: model.cssClasses.filterInput, textInput: model.filterString, attr: { placeholder: model.filterStringPlaceholder, \'aria-label\': model.filterStringPlaceholder }, event: { keyup: function (model, event) { $data.model.goToItems(event); } }"></input>\n    \x3c!-- ko if: $data.model.showSearchClearButton && !!$data.model.filterString --\x3e\n    <button data-bind="event: { click: (_, event) => { model.onClickSearchClearButton(event); } }, css: model.cssClasses.searchClearButtonIcon">\n      \x3c!-- ko component: { name: \'sv-svg-icon\', params: { iconName: \'icon-searchclear\', size: \'auto\' }  } --\x3e\n      \x3c!-- /ko --\x3e\n    </button>\n    \x3c!-- /ko --\x3e\n  </div>\n  \x3c!-- /ko --\x3e\n  <div data-bind="css: model.cssClasses.emptyContainer, visible: $data.model.isEmpty">\n    <div data-bind="css: model.cssClasses.emptyText, text: model.emptyMessage, attr: { \'aria-label\': model.emptyMessage }"></div>\n  </div>\n  \x3c!-- ko if: $data.model.renderElements --\x3e\n  <ul role="listbox"\n    data-bind="css: model.getListClass(), visible: !$data.model.isEmpty, attr: { id: model.elementId },\n    event: { mousedown: function (data, e) { e.preventDefault(); }, keydown: function(data, e) { $data.model.onKeyDown(event); return true; }, mousemove: function(data, e) { $data.model.onMouseMove(event); return true; } }">\n    \x3c!-- ko template: { foreach: model.renderedActions, afterRender: $data.afterItemRender } --\x3e\n    \x3c!-- ko component: { name: \'sv-list-item\', params: { item: $data, model: $parent.model } } --\x3e\n    \x3c!-- /ko --\x3e\n    \x3c!-- /ko --\x3e\n  </ul>\n  \x3c!-- /ko --\x3e\n</div>'},function(e,t){e.exports="\r\n<li role=\"option\"\r\ndata-bind=\"css: $data.model.getItemClass($data.item), attr: { id: $data.item.elementId, 'aria-selected': $data.model.isItemSelected($data.item) ? 'true' : 'false' }, click: itemClick, key2click, visible: $data.model.isItemVisible($data.item), event: { pointerdown: function (model, event) { $data.model.onPointerDown(event, $data.item); } }\">\r\n  \x3c!-- ko if: $data.item.needSeparator --\x3e\r\n  <div data-bind=\"css: $data.model.cssClasses.itemSeparator\"></div>\r\n  \x3c!-- /ko --\x3e\r\n  <div data-bind=\"style: { paddingInlineStart: $data.model.getItemIndent($data.item) }, css: $data.model.cssClasses.itemBody, attr: { title: $data.item.locTitle.calculatedText }, event: { mouseover: function(m, e) { $data.hover(e, $data); return true; }, mouseleave: function(m, e) { $data.leave(e, $data); return true; } }\">\r\n  \x3c!-- ko component: { name: $data.item.component || 'sv-list-item-content', params: { item: $data.item, model: $data.model } } --\x3e\r\n  \x3c!-- /ko --\x3e\r\n  </div>\r\n</li>"},function(e,t){e.exports="\x3c!-- ko if: $data.item.iconName --\x3e\n\x3c!-- ko component: { name: \"sv-svg-icon\", params: { iconName: $data.item.iconName, size: $data.item.iconSize, css: $data.model.cssClasses.itemIcon } }--\x3e\n\x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e\n\x3c!-- ko template: { name: 'survey-string', data: $data.item.locTitle } --\x3e\n\x3c!-- /ko --\x3e\n\x3c!-- ko if: $data.item.markerIconName --\x3e\n\x3c!-- ko component: { name: 'sv-svg-icon', params: { css: $data.item.cssClasses.itemMarkerIcon, iconName: $data.item.markerIconName, size: $data.item.markerIconSize } } --\x3e\n\x3c!-- /ko --\x3e\n\x3c!-- /ko --\x3e"},function(e,t){e.exports="\x3c!-- ko component: { name: 'sv-list-item-content', params: { item: $data.item, model: $data.model } } --\x3e\n\x3c!-- /ko --\x3e\n<sv-popup params=\"{ model: $data.item.popupModel }\"></sv-popup>"},function(e,t){e.exports='\x3c!-- ko if: hasIcon --\x3e\n<svg class="sv-svg-icon" data-bind="css: css" role="img"><use></use></svg>\n\x3c!-- /ko --\x3e\n'},function(e,t){e.exports='<button\n  type="button"\n  data-bind="click: question.koRemoveRowClick, disable: question.isInputReadOnly, css: question.getRemoveRowButtonCss()"\n>\n  \x3c!-- ko template: { name: \'survey-string\', data: question.locRemoveRowText } --\x3e\x3c!-- /ko --\x3e\n  <span data-bind="css: question.cssClasses.iconRemove"></span>\n</button>\n'},function(e,t){e.exports="<button\ntype=\"button\"\ndata-bind=\"css:question.getDetailPanelButtonCss(row), click:row.showHideDetailPanelClick, attr:{ 'aria-expanded': question.getIsDetailPanelShowing($data.row) ? 'true': 'false', 'aria-controls': question.getIsDetailPanelShowing($data.row) ? row.detailPanelId: false}\"\n>\n\x3c!-- ko component: { name: 'sv-svg-icon', params: { css: question.getDetailPanelIconCss(row), iconName: question.getDetailPanelIconId(row), size: 'auto' } } --\x3e\n\x3c!-- /ko --\x3e\n</button>\n\x3c!-- ko if: question.detailPanelMode === \"popup\" && question.getKoPopupIsVisible(row) --\x3e\n<sv-popup\nparams=\"contentComponentName: 'sv-panel', contentComponentData: { question: row.detailPanel, onItemSelect: function(){} }, isVisible: question.getKoPopupIsVisible(row), isModal: true, onHide: function() { row.hideDetailPanel() }, verticalPosition: 'top', horizontalPosition: 'right'\"\n></sv-popup>\n\x3c!-- /ko --\x3e"},function(e,t){e.exports='\x3c!-- ko if: question.iconDragElement --\x3e\n<svg data-bind="css: question.cssClasses.dragElementDecorator">\n  <use data-bind="attr: { \'xlink:href\': question.iconDragElement }" xlink:href=\'\'></use>\n</svg>\n\x3c!-- /ko --\x3e\n\x3c!-- ko ifnot: question.iconDragElement --\x3e\n<span data-bind="css: question.cssClasses.iconDrag"></span>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports='<label role="radio" data-bind="css: model.css.label, attr: { title: model.caption.koRenderedHtml }">\r\n  <input type="radio"\r\n    data-bind="attr: { name: model.name, id: model.id, \'aria-required\': model.isRequired, \'aria-label\': model.caption.koRenderedHtml, role: \'radio\', \'aria-invalid\': model.hasErrors, \'aria-errormessage\': model.describeBy}, checkedValue: model.value, checked: model.question.renderedValue, disable: model.readOnly, css: model.css.control" />\r\n  <div data-bind="css: model.css.decorator">\r\n    \x3c!-- ko if: !!model.iconName--\x3e\r\n    <sv-svg-icon data-bind="css: model.css.icon" params="iconName: model.iconName, size: model.iconSize"></sv-svg-icon>\r\n    \x3c!-- /ko --\x3e\r\n    \x3c!-- ko if: model.showCaption --\x3e\r\n    <span data-bind="css: model.css.caption, attr: { title: model.caption.koRenderedHtml }">\r\n      \x3c!-- ko template: { name: \'survey-string\', data: model.caption } --\x3e\r\n      \x3c!-- /ko --\x3e\r\n    </span>\r\n    \x3c!-- /ko --\x3e\r\n  </div>\r\n</label>'},function(e,t){e.exports='\x3c!-- ko with: $data.item  --\x3e\n  <input type="button" data-bind="event: { mousedown: $data.data && $data.data.mouseDown }, value: $data.title, click: $data.action, visible: $data.visible, css: $data.innerCss, disable: $data.disabled, attr: { title: $data.getTooltip() }"/>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports='\x3c!-- ko if: question.koCanAddPanel --\x3e\n<button type="button" data-bind="click: question.koAddPanelClick, css: question.koAddButtonCss, visible: question.koCanAddPanel">\n  <span data-bind="css: question.cssClasses.buttonAddText">\x3c!-- ko template: { name: \'survey-string\', data: question.locPanelAddText } --\x3e\x3c!-- /ko --\x3e</span>\n</button>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports="<div data-bind=\"attr: { title: question.panelNextText }, click: question.koNextPanelClick, css: question.koNextButtonCss\">\n    \x3c!-- ko component: { name: 'sv-svg-icon', params: { iconName: question.cssClasses.progressBtnIcon, size: 'auto' } } --\x3e\x3c!-- /ko --\x3e\n</div>"},function(e,t){e.exports="<div data-bind=\"attr: { title: question.panelPrevText }, click: question.koPrevPanelClick, css: question.koPrevButtonCss\">\n    \x3c!-- ko component: { name: 'sv-svg-icon', params: { iconName: question.cssClasses.progressBtnIcon, size: 'auto' } } --\x3e\x3c!-- /ko --\x3e\n</div>"},function(e,t){e.exports='<div data-bind="text: question.koProgressText, css: question.cssClasses.progressText"></div>'},function(e,t){e.exports='<button type="button" data-bind="click: function() { question.koRemovePanelClick(panel); }, css: question.getPanelRemoveButtonCss()">\n  <span data-bind="css: question.cssClasses.buttonRemoveText">\x3c!-- ko template: { name: \'survey-string\', data: question.locPanelRemoveText } --\x3e\x3c!-- /ko --\x3e</span>\n  <span data-bind="css: question.cssClasses.iconRemove"></span>\n</button>'},function(e,t){e.exports='<div class="sv-brand-info">\n  <a class="sv-brand-info__logo" href="https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page"><img src="https://surveyjs.io/Content/Images/poweredby.svg"/></a>\n  <div class="sv-brand-info__text">Try and see how easy it is to <a href="https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey">create a survey</a></div>\n  <div class="sv-brand-info__terms"><a href="https://surveyjs.io/TermsOfUse">Terms of Use & Privacy Statement</a></div>\n</div>\n'},function(e,t){e.exports='<div>\n  <span aria-hidden="true" data-bind="css: cssClasses.error.icon"></span>\n  <span data-bind="css: cssClasses.error.item">\n      \x3c!-- ko template: { name: \'survey-string\', data: error.locText } --\x3e\x3c!-- /ko --\x3e\n  </span>\n</div>\n'},function(e,t){e.exports='\x3c!-- ko if: notifier.isDisplayed --\x3e\n<div data-bind="css: notifier.css, style: { visibility: notifier.active ? \'visible\' : \'hidden\' }" role="alert" aria-live="polite">\n  <span data-bind="text: notifier.message"></span>\n  \x3c!-- ko component: { name: "sv-action-bar", params: { model: notifier.actionBar } } --\x3e\n  \x3c!-- /ko --\x3e\n</div>\n\x3c!-- /ko --\x3e'},function(e,t){e.exports="<div class=\"sd-loading-indicator\">\n  \x3c!-- ko component: { name: \"sv-svg-icon\", params: { iconName: 'icon-loading', size: 'auto' }  } --\x3e\n  \x3c!-- /ko --\x3e\n</div>"},function(e,t,n){"use strict";n.r(t),n.d(t,"Survey",(function(){return p})),n.d(t,"Model",(function(){return p})),n.d(t,"PopupSurvey",(function(){return f})),n.d(t,"SurveyWindow",(function(){return k})),n.d(t,"ImplementorBase",(function(){return c})),n.d(t,"QuestionRow",(function(){return h})),n.d(t,"Page",(function(){return q})),n.d(t,"Panel",(function(){return g})),n.d(t,"FlowPanel",(function(){return w})),n.d(t,"QuestionImplementor",(function(){return R})),n.d(t,"QuestionSelectBaseImplementor",(function(){return T})),n.d(t,"QuestionCheckboxBaseImplementor",(function(){return O})),n.d(t,"QuestionCheckbox",(function(){return M})),n.d(t,"QuestionTagbox",(function(){return P})),n.d(t,"QuestionRanking",(function(){return V})),n.d(t,"QuestionComment",(function(){return L})),n.d(t,"QuestionDropdown",(function(){return j})),n.d(t,"QuestionFile",(function(){return Q})),n.d(t,"QuestionHtml",(function(){return U})),n.d(t,"QuestionMatrix",(function(){return G})),n.d(t,"QuestionMatrixDropdown",(function(){return Y})),n.d(t,"QuestionMatrixDynamicImplementor",(function(){return te})),n.d(t,"QuestionMatrixDynamic",(function(){return ne})),n.d(t,"QuestionPanelDynamic",(function(){return se})),n.d(t,"MultipleTextItem",(function(){return ue})),n.d(t,"QuestionMultipleText",(function(){return me})),n.d(t,"QuestionRadiogroup",(function(){return ve})),n.d(t,"QuestionRating",(function(){return ye})),n.d(t,"QuestionRatingImplementor",(function(){return ke})),n.d(t,"QuestionText",(function(){return ce})),n.d(t,"QuestionBoolean",(function(){return be})),n.d(t,"QuestionEmpty",(function(){return qe})),n.d(t,"QuestionExpression",(function(){return we})),n.d(t,"QuestionImagePicker",(function(){return Ie})),n.d(t,"PopupSurveyImplementor",(function(){return v})),n.d(t,"SurveyTemplateText",(function(){return r})),n.d(t,"QuestionImage",(function(){return Oe})),n.d(t,"QuestionSignaturePad",(function(){return Se})),n.d(t,"QuestionCustom",(function(){return De})),n.d(t,"QuestionButtonGroup",(function(){return Ee})),n.d(t,"ActionBarItemViewModel",(function(){})),n.d(t,"ActionBarItemDropdownViewModel",(function(){})),n.d(t,"ActionBarSeparatorViewModel",(function(){})),n.d(t,"ActionContainerImplementor",(function(){return Fe})),n.d(t,"CheckboxViewModel",(function(){})),n.d(t,"BooleanRadioItemViewModel",(function(){})),n.d(t,"BooleanRadioViewModel",(function(){})),n.d(t,"PanelViewModel",(function(){return Ke})),n.d(t,"PopupViewModel",(function(){return Je})),n.d(t,"showModal",(function(){return Xe})),n.d(t,"showDialog",(function(){return Ye})),n.d(t,"ProgressButtonsViewModel",(function(){return et})),n.d(t,"ProgressViewModel",(function(){return nt})),n.d(t,"ComponentsContainer",(function(){return at})),n.d(t,"TitleElementViewModel",(function(){})),n.d(t,"TitleContentViewModel",(function(){})),n.d(t,"TitleActionViewModel",(function(){})),n.d(t,"StringEditorViewModel",(function(){return ut})),n.d(t,"StringViewerViewModel",(function(){})),n.d(t,"LogoImageViewModel",(function(){})),n.d(t,"Skeleton",(function(){})),n.d(t,"CharacterCounterComponent",(function(){})),n.d(t,"RatingItemViewComponent",(function(){})),n.d(t,"RatingDropdownViewModel",(function(){})),n.d(t,"RatingItemViewModel",(function(){})),n.d(t,"RatingItemStarViewModel",(function(){})),n.d(t,"RatingItemSmileyViewModel",(function(){})),n.d(t,"DropdownViewModel",(function(){})),n.d(t,"DropdownSelectViewModel",(function(){})),n.d(t,"TagboxViewComponent",(function(){})),n.d(t,"TagboxViewModel",(function(){})),n.d(t,"SurveyFilePreview",(function(){})),n.d(t,"ListItemViewComponent",(function(){})),n.d(t,"ListItemContentViewComponent",(function(){})),n.d(t,"ListItemGroupViewComponent",(function(){})),n.d(t,"ListViewComponent",(function(){})),n.d(t,"SvgIconViewModel",(function(){})),n.d(t,"SurveyQuestionMatrixDynamicRemoveButton",(function(){})),n.d(t,"SurveyQuestionMatrixDetailButton",(function(){})),n.d(t,"SurveyQuestionMatrixDynamicDragDropIcon",(function(){})),n.d(t,"ButtonGroupItemViewModel",(function(){return Nt})),n.d(t,"SurveyNavigationButton",(function(){})),n.d(t,"SurveyQuestionPaneldynamicActioons",(function(){})),n.d(t,"BrandInfoComponent",(function(){})),n.d(t,"QuestionErrorComponent",(function(){})),n.d(t,"NotifierViewModel",(function(){})),n.d(t,"LoadingIndicatorViewModel",(function(){})),n.d(t,"SurveyModel",(function(){return s.SurveyModel})),n.d(t,"SurveyWindowModel",(function(){return s.SurveyWindowModel})),n.d(t,"settings",(function(){return s.settings})),n.d(t,"surveyLocalization",(function(){return s.surveyLocalization})),n.d(t,"surveyStrings",(function(){return s.surveyStrings}));var o,i=n(0),s=n(1),a=n(2),r=function(){function e(){}return e.prototype.addText=function(e,t,n){t=this.getId(t,n),this.text=this.text+'<script type="text/html" '+t+">"+e+"<\/script>"},e.prototype.replaceText=function(e,t,n){void 0===n&&(n=null);var o=this.getId(t,n),i=this.text.indexOf(o);if(i<0)this.addText(e,t,n);else if(!((i=this.text.indexOf(">",i))<0)){var s=i+1;(i=this.text.indexOf("<\/script>",s))<0||(this.text=this.text.substring(0,s)+e+this.text.substring(i))}},e.prototype.getId=function(e,t){var n='id="survey-'+e;return t&&(n+="-"+t),n+'"'},Object.defineProperty(e.prototype,"text",{get:function(){return a},set:function(e){a=e},enumerable:!1,configurable:!0}),e}(),c=function(){function e(t){this.element=t,this.implementedMark="__surveyImplementedKo",t[this.implementedMark]||(t.supportOnElementRenderedEvent=!1,t.iteratePropertiesHash((function(n,o){e.doIterateProperties(t,n,o)})),t.createArrayCoreHandler=function(e,n){var o=i.observableArray();return o().onArrayChanged=function(){t.isLoadingFromJson||t.isDisposed||o.notifySubscribers()},e[n]=o,o()},t.getPropertyValueCoreHandler=function(e,t){return void 0===e[t]&&(e[t]=i.observable()),"function"==typeof e[t]?e[t]():e[t]},t.setPropertyValueCoreHandler=function(e,t,n){void 0!==e[t]?e[t](n):e[t]=i.observable(n)},t[this.implementedMark]=!0)}return e.doIterateProperties=function(e,t,n){var o=t[n];"function"!==o&&(Array.isArray(o)?(t[n]=i.observableArray(o),o.onArrayChanged=function(){e.isLoadingFromJson||e.isDisposed||t[n].notifySubscribers()}):t[n]=i.observable(o))},e.prototype.dispose=function(){this.element.iteratePropertiesHash((function(e,t){e[t]=i.unwrap(e[t]),Array.isArray(e[t])&&(e[t].onArrayChanged=void 0)})),this.element.supportOnElementRenderedEvent=!0,this.element.createArrayCoreHandler=void 0,this.element.getPropertyValueCoreHandler=void 0,this.element.setPropertyValueCoreHandler=void 0,delete this.element[this.implementedMark]},e}(),l=(o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),d=function(){return(d=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};s.CustomWidgetCollection.Instance.onCustomWidgetAdded.add((function(e){e.widgetJson.isDefaultRender||(e.htmlTemplate||(e.htmlTemplate="<div>'htmlTemplate' attribute is missed.</div>"),(new r).replaceText(e.htmlTemplate,"widget",e.name))}));var u=function(e){function t(t){var n=e.call(this,t)||this;return n.survey=t,n.survey.valueHashGetDataCallback=function(e,t){return void 0===e[t]&&(e[t]=i.observable()),i.unwrap(e[t])},n.survey.valueHashSetDataCallback=function(e,t,n){i.isWriteableObservable(e[t])?e[t](n):e[t]=i.observable(n)},n.survey.valueHashDeleteDataCallback=function(e,t){i.isWriteableObservable(e[t])?e[t](void 0):delete e[t]},n.survey.koTitleTemplate=i.observable("survey-header"),n.survey.koAfterRenderPage=function(e,t){var o=s.SurveyElement.GetFirstNonTextElement(e);o&&setTimeout((function(){i.tasks&&i.tasks.runEarly(),n.survey.afterRenderPage(o)}),0)},n.survey.koAfterRenderHeader=function(e,t){var o=s.SurveyElement.GetFirstNonTextElement(e);o&&n.survey.afterRenderHeader(o)},n.survey.koProcessedCompletedHtml=i.observable(n.survey.processedCompletedHtml),n.survey.locCompletedHtml.koRenderedHtml.subscribe((function(){n.survey.koProcessedCompletedHtml(n.survey.processedCompletedHtml)})),n.survey.registerPropertyChangedHandlers(["state"],(function(){n.survey.koProcessedCompletedHtml(n.survey.processedCompletedHtml)})),n.survey.disposeCallback=function(){n.dispose()},new c(n.survey.timerModel),n}return l(t,e),t.prototype.render=function(e){if(void 0===e&&(e=null),void 0===i)throw new Error("knockoutjs library is not loaded.");var t=this.survey.activePage;t&&t.updateCustomWidgets(),this.survey.updateElementCss(!1),e&&"string"==typeof e&&(e=Object(s.getElement)(e)),e&&(this.renderedElement=e),this.survey.startTimerFromUI(),this.applyBinding()},t.prototype.applyBinding=function(){this.renderedElement&&(i.cleanNode(this.renderedElement),i.renderTemplate("survey-content",this.survey,{},this.renderedElement))},t.prototype.koEventAfterRender=function(e,t){t.afterRenderSurvey(e)},t.prototype.dispose=function(){e.prototype.dispose.call(this),this.renderedElement&&(i.cleanNode(this.renderedElement),this.renderedElement.innerHTML="",this.renderedElement=void 0),this.survey.koAfterRenderPage=void 0,this.survey.koAfterRenderHeader=void 0,this.survey.iteratePropertiesHash((function(e,t){delete e[t]}))},t}(c),p=function(e){function t(t,n){void 0===t&&(t=null),void 0===n&&(n=null);var o=e.call(this,t,n)||this;return o.implementor=new u(o),o}return l(t,e),t.prototype.render=function(e){void 0===e&&(e=null),this.implementor.render(e)},t.prototype.fromJSON=function(t,n){t&&(e.prototype.fromJSON.call(this,t,n),this.locStrsChanged())},t.prototype.getHtmlTemplate=function(){return a},t.prototype.makeReactive=function(e){new c(e)},t.prototype.dispose=function(){e.prototype.dispose.call(this),this.implementor&&(this.implementor.dispose(),this.implementor=void 0)},t}(s.SurveyModel);s.LocalizableString.prototype.onCreating=function(){var e=this;this.koHasHtml=i.observable(this.hasHtml),this.koRenderedHtml=i.observable(this.renderedHtml),this.onStringChanged.add((function(){var t=e.hasHtml;e.koHasHtml(t),e.koRenderedHtml(t?e.getHtmlValue():e.calculatedText)}))},s.ItemValue.prototype.onCreating=function(){var e=this;new c(this),this.koText=i.pureComputed((function(){return e.locText.koRenderedHtml()}))},i.components.register("survey",{viewModel:{createViewModel:function(e,t){var n=i.unwrap(e.survey)||i.unwrap(e.model);return function(e){e.implementor||(e.implementor=new u(e),e.render=function(t){void 0===t&&(t=null),e.implementor.render(t)},e.getHtmlTemplate=function(){return a},e.makeReactive=function(e){new c(e)})}(n),setTimeout((function(){var e=document.createElement("div");e.style.width="100%",e.style.height="100%",t.element.appendChild(e),n.render(e)}),1),e.survey}},template:a}),i.bindingHandlers.surveyProp={update:function(e,t,n){var o=i.utils.unwrapObservable(t())||{};for(var s in o)if("string"==typeof s){var a=i.utils.unwrapObservable(o[s]);e[s]=a}}},s.SurveyModel.platform="knockout";i.bindingHandlers.elementStyle={update:function(e,t,n){if(e&&e.style.length)for(var o=e.style.length-1;o>=0;o--){var s=e.style[o];s&&0===s.indexOf("--sjs-")&&e.style.removeProperty(s)}var a=i.utils.unwrapObservable(t())||{};Object.keys(a).forEach((function(t){0===t.indexOf("--")?e.style.setProperty(t,a[t]):e.style[t]=a[t]}))}},i.bindingHandlers.key2click={init:function(e,t,n,o){var i=d({},t())||{processEsc:!0,disableTabStop:!1};o&&o.disableTabStop||i&&i.disableTabStop?e.tabIndex=-1:(e.tabIndex=0,e.onkeyup=function(e){return e.preventDefault(),e.stopPropagation(),Object(s.doKey2ClickUp)(e,i),!1},e.onkeydown=function(e){return Object(s.doKey2ClickDown)(e,i)},e.onblur=function(e){return Object(s.doKey2ClickBlur)(e)})}};var m=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),x=n(43),v=function(e){function t(t){var n=e.call(this,t)||this;return n.window=t,n.window.showingChangedCallback=function(){n.doShowingChanged()},n.window.doExpand=function(){n.window.changeExpandCollapse()},n.window.doHide=function(){n.window.hide()},n.window.doToggleFullScreen=function(){n.window.toggleFullScreen()},n}return m(t,e),t.prototype.doShowingChanged=function(){var e=this.window.windowElement,t=s.settings.environment.rootElement;this.window.isShowing?(e.innerHTML=this.template,i.cleanNode(e),i.applyBindings(this.window,e),t.appendChild(e)):(t.removeChild(e),e.innerHTML="")},Object.defineProperty(t.prototype,"template",{get:function(){return this.window.templateValue?this.window.templateValue:x},enumerable:!1,configurable:!0}),t}(c);s.PopupSurveyModel.prototype.onCreating=function(){this.implementor=new v(this)};var f=function(e){function t(t,n){return void 0===n&&(n=null),e.call(this,t,n)||this}return m(t,e),t}(s.PopupSurveyModel),k=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return m(t,e),t}(f),y=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),h=function(e){function t(t){var n=e.call(this,t)||this;n.panel=t,new c(n);var o=n;return n.koElementAfterRender=function(e,t){return o.elementAfterRender(e,t)},n}return y(t,e),t.prototype.getElementType=function(e){return e.isPanel?"survey-panel":"survey-question"},t.prototype.koAfterRender=function(e,t){for(var n=0;n<e.length;n++){var o=e[n];"#text"==o.nodeName?o.data="":(t.setWrapperElement(o),i.utils.domNodeDisposal.addDisposeCallback(o,(function(){t.setWrapperElement(void 0)})))}},t.prototype.elementAfterRender=function(e,t){var n=this;this.panel&&this.panel.survey&&setTimeout((function(){i.tasks&&i.tasks.runEarly();var o=s.SurveyElement.GetFirstNonTextElement(e);if(o){var a=t;a.isDisposed||(a.isPanel&&n.panel.survey?n.panel.survey.afterRenderPanel(t,o):a.afterRender(o))}}),0)},t.prototype.rowAfterRender=function(e,t){var n=e[0].parentElement;if(t.setRootElement(n),i.utils.domNodeDisposal.addDisposeCallback(n,(function(){t.setRootElement(void 0)})),!t.isNeedRender){var o=setTimeout((function(){return t.startLazyRendering(n)}),1);i.utils.domNodeDisposal.addDisposeCallback(n,(function(){clearTimeout(o),t.stopLazyRendering(),t.isDisposed||(t.isNeedRender=!t.isLazyRendering())}))}},t.prototype.dispose=function(){e.prototype.dispose.call(this),this.koElementAfterRender=void 0},t}(s.QuestionRowModel),b=function(e){function t(t){var n=e.call(this,t)||this;return n.panel=t,n}return y(t,e),t}(c),g=function(e){function t(t){void 0===t&&(t="");var n=e.call(this,t)||this;n.onCreating();return n.koElementType=i.observable("survey-panel"),n}return y(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new b(this)},t.prototype.createRow=function(){return new h(this)},t.prototype.onCreating=function(){},t.prototype.onNumChanged=function(e){this.locTitle.strChanged()},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.PanelModel),q=function(e){function t(t){void 0===t&&(t="");var n=e.call(this,t)||this;return n.onCreating(),n}return y(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new c(this)},t.prototype.createRow=function(){return new h(this)},t.prototype.onCreating=function(){},t.prototype.onNumChanged=function(e){this.locTitle.strChanged()},t.prototype.dispose=function(){e.prototype.dispose.call(this),this._implementor.dispose(),this._implementor=void 0},t}(s.PageModel);s.Serializer.overrideClassCreator("panel",(function(){return new g})),s.Serializer.overrideClassCreator("page",(function(){return new q})),s.ElementFactory.Instance.registerElement("panel",(function(e){return new g(e)}));var C=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),w=function(e){function t(t){void 0===t&&(t="");var n=e.call(this,t)||this;n.koElementType=i.observable("survey-flowpanel"),new c(n),n.onCreating();var o=n;return n.koElementAfterRender=function(e,t){return o.elementAfterRender(e,t)},n}return C(t,e),t.prototype.onCreating=function(){},t.prototype.getHtmlForQuestion=function(e){return'<span question="true" contenteditable="false" id="flowpanel_'+e.name+'">\x3c!-- ko template: { name: "survey-flowpanel-question", data: "'+e.name+'"} --\x3e\x3c!-- /ko --\x3e</span>'},t.prototype.elementAfterRender=function(e,t){if(this.survey){var n=s.SurveyElement.GetFirstNonTextElement(e);n&&this.survey.afterRenderQuestion(t,n)}},t}(s.FlowPanelModel);s.Serializer.overrideClassCreator("flowpanel",(function(){return new w})),i.components.register("f-panel",{viewModel:{createViewModel:function(e,t){var n=this,o=i.unwrap(e.question);n.element=t.element,n.element.innerHTML=o.html,n.isOnFocus=!1,n.wasChanged=!1,n.isContentUpdating=!1,o.contentChangedCallback=function(){n.isContentUpdating||(i.cleanNode(n.element),n.element.innerHTML=o.html,i.applyBindings({question:o},n.element),i.tasks&&i.tasks.runEarly())},n.element.onfocus=function(){n.isOnFocus=!0},n.element.onblur=function(){n.wasChanged&&n.updateContent(),n.isOnFocus=!1,n.wasChanged=!1},n.element.ondragend=function(e){var t=n.element.innerHTML,i=/{(.*?(element:)[^$].*?)}/g.exec(t);if(null!==i){var s=o.getQuestionFromText(i[0]);s&&(o.content=n.getContent(s.name))}},n.updateContent=function(){n.isContentUpdating=!0,o.content=n.getContent(),n.isContentUpdating=!1},o.getContent=n.getContent=function(e){var t=document.createElement("div");t.innerHTML=n.element.innerHTML;for(var i=t.querySelectorAll('span[question="true"]'),s=0;s<i.length;s++){var a=i[s].id.replace("flowpanel_",""),r="";if(a!==e){var c=o.getQuestionByName(a);r=c?o.getElementContentText(c):""}i[s].outerHTML=r}return t.innerHTML};return new MutationObserver((function(e,t){n.isOnFocus&&(n.wasChanged=!0)})).observe(n.element,{characterData:!0,attributes:!0,childList:!0,subtree:!0}),{question:o}}},template:"<div></div>"});var _=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),R=function(e){function t(t){var n=e.call(this,t)||this;n.question=t,n._koValue=i.observableArray(),n.disposedObjects=[],n.callBackFunctions=[];var o=!1;return n._koValue.subscribe((function(e){o||n.setKoValue(e)})),Object.defineProperty(n.question,"koValue",{get:function(){if(!s.Helpers.isTwoValueEquals(n._koValue(),n.getKoValue(),!1,!0,!1))try{o=!0,n._koValue(n.getKoValue())}finally{o=!1}return n._koValue},enumerable:!0,configurable:!0}),t.surveyLoadCallback=function(){n.onSurveyLoad()},n.setObservaleObj("koTemplateName",i.pureComputed((function(){return n.getTemplateName()}))),n.setObservaleObj("koElementType",i.observable("survey-question")),n.koDummy=i.observable(0),n.setCallbackFunc("koQuestionAfterRender",(function(e,t){n.koQuestionAfterRender(e,t)})),n.setCallbackFunc("koMouseDown",(function(){return n.question.onMouseDown(),!0})),n}return _(t,e),t.prototype.setObservaleObj=function(e,t,n){return void 0===n&&(n=!0),this.disposedObjects.push(e),n&&(this.question[e]=t),t},t.prototype.setCallbackFunc=function(e,t){this.callBackFunctions.push(e),this.question[e]=t},t.prototype.getKoValue=function(){return this.question.value},t.prototype.setKoValue=function(e){this.question.isReadOnlyAttr||(this.question.value=e)},t.prototype.onSurveyLoad=function(){},t.prototype.getQuestionTemplate=function(){return this.question.getTemplate()},t.prototype.getTemplateName=function(){return this.question&&this.question.customWidget&&!this.question.customWidget.widgetJson.isDefaultRender?"survey-widget-"+this.question.customWidget.name:"survey-question-"+this.getQuestionTemplate()},t.prototype.getNo=function(){return this.question.visibleIndex>-1?this.question.visibleIndex+1+". ":""},t.prototype.updateKoDummy=function(){this.question.isDisposed||(this.koDummy(this.koDummy()+1),this.question.locTitle.strChanged())},t.prototype.koQuestionAfterRender=function(e,t){var n=this;setTimeout((function(){i.tasks&&i.tasks.runEarly();var t=s.SurveyElement.GetFirstNonTextElement(e,!0);t&&(n.question.afterRenderQuestionElement(t),n.question&&n.question.customWidget&&n.question.customWidget.afterRender(n.question,t),i.utils.domNodeDisposal.addDisposeCallback(t,(function(){if(n.question.beforeDestroyQuestionElement(t),n.question&&n.question.customWidget)try{n.question.customWidget.willUnmount(n.question,t)}catch(e){console.warn("Custom widget will unmount failed")}})))}),0)},t.prototype.dispose=function(){e.prototype.dispose.call(this);for(var t=0;t<this.disposedObjects.length;t++){var n=this.disposedObjects[t],o=this[n]||this.question[n];o&&(this[n]&&(this[n]=void 0),this.question[n]&&(this.question[n]=void 0),o.dispose&&o.dispose())}this.disposedObjects=[];for(var i=0;i<this.callBackFunctions.length;i++)this.question[this.callBackFunctions[i]]=void 0;this.callBackFunctions=[],this.question.unregisterPropertyChangedHandlers(["visibleIndex"])},t}(c),I=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),T=function(e){function t(t){var n=e.call(this,t)||this;return n.onCreated(),n}return I(t,e),t.prototype.onCreated=function(){},Object.defineProperty(t.prototype,"isOtherSelected",{get:function(){return this.question.isOtherSelected},enumerable:!1,configurable:!0}),t}(R),O=function(e){function t(t){var n=e.call(this,t)||this;return n.setCallbackFunc("koAfterRender",n.koAfterRender),n}return I(t,e),t.prototype.koAfterRender=function(e,t){var n=e[0];"#text"==n.nodeName&&(n.data=""),"#text"==(n=e[e.length-1]).nodeName&&(n.data="")},t}(T),$=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),S=function(e){function t(t){return e.call(this,t)||this}return $(t,e),t.prototype.getKoValue=function(){return this.question.renderedValue},t.prototype.setKoValue=function(e){this.question.renderedValue=e},t}(O),M=function(e){function t(t){var n=e.call(this,t)||this;return n._selectAllItemImpl=void 0,n._otherItemImpl=void 0,n._selectAllItemImpl=new c(n.selectAllItem),n._otherItemImpl=new c(n.otherItem),n}return $(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new S(this)},t.prototype.dispose=function(){this._selectAllItemImpl&&(this._selectAllItemImpl.dispose(),this._selectAllItemImpl=void 0),this._otherItemImpl&&(this._otherItemImpl.dispose(),this._otherItemImpl=void 0),this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionCheckboxModel);s.Serializer.overrideClassCreator("checkbox",(function(){return new M("")})),s.QuestionFactory.Instance.registerQuestion("checkbox",(function(e){var t=new M(e);return t.choices=s.QuestionFactory.DefaultChoices,t}));var D=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),P=function(e){function t(t){var n=e.call(this,t)||this;return n.isAllSelectedUpdating=!1,n.koAllSelected=i.observable(n.isAllSelected),n.koAllSelected.subscribe((function(e){n.isAllSelectedUpdating||(e?n.selectAll():n.clearValue(!0))})),n}return D(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new O(this)},t.prototype.onSurveyValueChanged=function(t){e.prototype.onSurveyValueChanged.call(this,t),this.updateAllSelected()},t.prototype.onVisibleChoicesChanged=function(){e.prototype.onVisibleChoicesChanged.call(this),this.updateAllSelected()},t.prototype.updateAllSelected=function(){this.isAllSelectedUpdating=!0,this.koAllSelected(this.isAllSelected),this.isAllSelectedUpdating=!1},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,this.koAllSelected=void 0,e.prototype.dispose.call(this)},t}(s.QuestionTagboxModel);s.Serializer.overrideClassCreator("tagbox",(function(){return new P("")})),s.QuestionFactory.Instance.registerQuestion("tagbox",(function(e){var t=new P(e);return t.choices=s.QuestionFactory.DefaultChoices,t}));var B=n(44);i.components.register("sv-ranking-item-content",{viewModel:{createViewModel:function(e,t){return e}},template:B});var E=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),V=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.koHandleKeydown=function(e,n){return t.handleKeydown(n,e),!0},t.koHandlePointerDown=function(e,n){return t.survey.isDesignMode||n.preventDefault(),t.handlePointerDown(n,e,n.currentTarget),!0},t.koHandlePointerUp=function(e,n){return t.survey.isDesignMode||n.preventDefault(),t.handlePointerUp(n,e,n.currentTarget),!0},t}return E(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionRankingModel);s.Serializer.overrideClassCreator("ranking",(function(){return new V("")})),s.QuestionFactory.Instance.registerQuestion("ranking",(function(e){var t=new V(e);return t.choices=s.QuestionFactory.DefaultChoices,t}));var A=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),L=function(e){function t(t){return e.call(this,t)||this}return A(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionCommentModel);s.Serializer.overrideClassCreator("comment",(function(){return new L("")})),s.QuestionFactory.Instance.registerQuestion("comment",(function(e){return new L(e)}));var N=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),H=function(e){function t(t){return e.call(this,t)||this}return N(t,e),t}(T),j=function(e){function t(t){var n=e.call(this,t)||this;return n.koDisableOption=function(e,t){t&&i.applyBindingsToNode(e,{disable:i.computed((function(){return!t.isEnabled}))},t)},n}return N(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new H(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionDropdownModel);s.Serializer.overrideClassCreator("dropdown",(function(){return new j("")})),s.QuestionFactory.Instance.registerQuestion("dropdown",(function(e){var t=new j(e);return t.choices=s.QuestionFactory.DefaultChoices,t}));var F=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),W=function(e){function t(t){var n=e.call(this,t)||this;return n.koRecalc=i.observable(0),n.setObservaleObj("koState",i.observable("empty")),n.setObservaleObj("koHasValue",i.computed((function(){return"loaded"===n.question.koState()}))),n.setObservaleObj("koData",i.computed((function(){return n.question.koHasValue()?n.question.previewValue:[]}))),n.setObservaleObj("ko",i.observable()),n.setObservaleObj("koInputTitle",i.computed((function(){return n.koRecalc(),n.question.inputTitle}))),n.setObservaleObj("koChooseFileCss",i.pureComputed((function(){return n.question.getChooseFileCss()}))),n.setCallbackFunc("koGetChooseButtonText",(function(){return n.question.koState(),n.question.chooseButtonText})),n.setCallbackFunc("ondrop",(function(e,t){n.question.onDrop(Object(s.getOriginalEvent)(t))})),n.setCallbackFunc("ondragover",(function(e,t){n.question.onDragOver(Object(s.getOriginalEvent)(t))})),n.setCallbackFunc("ondragenter",(function(e,t){n.question.onDragEnter(Object(s.getOriginalEvent)(t))})),n.setCallbackFunc("ondragleave",(function(e,t){n.question.onDragLeave(Object(s.getOriginalEvent)(t))})),n.setCallbackFunc("dochange",(function(e,t){n.question.doChange(Object(s.getOriginalEvent)(t))})),n.setCallbackFunc("doclean",(function(e,t){n.question.doClean(Object(s.getOriginalEvent)(t))})),n.setCallbackFunc("doremovefile",(function(e,t){n.question.doRemoveFile(e,t)})),n.setCallbackFunc("dodownload",(function(e,t){return n.question.doDownloadFile(Object(s.getOriginalEvent)(t),e),!0})),n.setCallbackFunc("dodownloadFromContainer",(function(e,t){return n.question.doDownloadFileFromContainer(Object(s.getOriginalEvent)(t),e),!0})),n}return F(t,e),t}(R),Q=function(e){function t(t){var n=e.call(this,t)||this;return n.updateState=function(e,t){n.koState(t.state),n._implementor.koRecalc(n._implementor.koRecalc()+1)},n.onUploadStateChanged.add(n.updateState),n.updateState(n,{state:n.currentState}),n}return F(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new W(this)},t.prototype.dispose=function(){this.onUploadStateChanged.remove(this.updateState),this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionFileModel);s.Serializer.overrideClassCreator("file",(function(){return new Q("")})),s.QuestionFactory.Instance.registerQuestion("file",(function(e){return new Q(e)}));var z=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),U=function(e){function t(t){return e.call(this,t)||this}return z(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionHtmlModel);s.Serializer.overrideClassCreator("html",(function(){return new U("")})),s.QuestionFactory.Instance.registerQuestion("html",(function(e){return new U(e)}));var K=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),G=function(e){function t(t){var n=e.call(this,t)||this;return n.koVisibleRows=i.observableArray(),n.koVisibleColumns=i.observableArray(),n.koVisibleRows(n.visibleRows),n.koVisibleColumns(n.visibleColumns),n}return K(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.onColumnsChanged=function(){e.prototype.onColumnsChanged.call(this),this.koVisibleColumns(this.visibleColumns)},t.prototype.onRowsChanged=function(){e.prototype.onRowsChanged.call(this),this.koVisibleRows(this.visibleRows)},t.prototype.onSurveyLoad=function(){e.prototype.onSurveyLoad.call(this),this.onRowsChanged()},t.prototype.onMatrixRowCreated=function(e){new c(e)},t.prototype.getVisibleRows=function(){var t=e.prototype.getVisibleRows.call(this);return this.koVisibleRows(t),t},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,this.koVisibleRows=void 0,this.koVisibleColumns=void 0,e.prototype.dispose.call(this)},t}(s.QuestionMatrixModel);s.Serializer.overrideClassCreator("matrix",(function(){return new G("")})),s.QuestionFactory.Instance.registerQuestion("matrix",(function(e){var t=new G(e);return t.rows=s.QuestionFactory.DefaultRows,t.columns=s.QuestionFactory.DefaultColums,t}));var J=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),X=function(e){function t(t){var n=e.call(this,t)||this;return n.koRecalc=i.observable(0),n.matrix.onRenderedTableCreatedCallback=function(e){n._tableImplementor&&n._tableImplementor.dispose(),n._tableImplementor=new c(e)},n.matrix.onRenderedTableResetCallback=function(){n.question.isDisposed||n.koRecalc(n.koRecalc()+1)},n.matrix.onAddColumn=function(e){new c(e)},n.setObservaleObj("koTable",i.pureComputed((function(){return n.koRecalc(),n.matrix.renderedTable}))),n.setCallbackFunc("koCellAfterRender",(function(e,t){return n.cellAfterRender(e,t)})),n.setCallbackFunc("koCellQuestionAfterRender",(function(e,t){return n.cellQuestionAfterRender(e,t)})),n.setCallbackFunc("koAddRowClick",(function(){n.addRow()})),n.setCallbackFunc("koRemoveRowClick",(function(e){n.removeRow(e.row)})),n.setCallbackFunc("koPanelAfterRender",(function(e,t){n.panelAfterRender(e,t)})),n.setCallbackFunc("koRowAfterRender",(function(e,t){for(var n=0;n<e.length;n++){var o=e[n],s=o.nodeName;"#text"!==s&&"#comment"!==s&&(t.setRootElement(o),i.utils.domNodeDisposal.addDisposeCallback(o,(function(){t.setRootElement(void 0)})))}})),n}return J(t,e),Object.defineProperty(t.prototype,"matrix",{get:function(){return this.question},enumerable:!1,configurable:!0}),t.prototype.cellAfterRender=function(e,t){var n=this;this.question.survey&&setTimeout((function(){i.tasks&&i.tasks.runEarly();var o=s.SurveyElement.GetFirstNonTextElement(e);if(o){var a=t;if(a&&n.question&&n.question.survey&&!n.question.isDisposed){var r={cell:a.cell,cellQuestion:a.question,htmlElement:o,row:a.row,column:a.cell?a.cell.column:null};n.question.survey.matrixAfterCellRender(n.question,r),a.question&&a.question.afterRenderCore(o)}}}),0)},t.prototype.cellQuestionAfterRender=function(e,t){this.question&&this.question.survey&&setTimeout((function(){i.tasks&&i.tasks.runEarly();var n=s.SurveyElement.GetFirstNonTextElement(e);if(n){var o=t;if(o){var a=o.question;a&&a.survey&&!a.isDisposed&&(a.customWidget&&(a.customWidget.afterRender(o.question,n),i.utils.domNodeDisposal.addDisposeCallback(n,(function(){a.customWidget.willUnmount(o.question,n)}))),i.utils.domNodeDisposal.addDisposeCallback(n,(function(){a.beforeDestroyQuestionElement(n)})),a.afterRenderQuestionElement(n))}}}),0)},t.prototype.isAddRowTop=function(){return!1},t.prototype.isAddRowBottom=function(){return!1},t.prototype.addRow=function(){},t.prototype.removeRow=function(e){},t.prototype.panelAfterRender=function(e,t){if(this.question&&this.question.survey){var n=s.SurveyElement.GetFirstNonTextElement(e);this.question.survey.afterRenderPanel(t,n)}},t.prototype.dispose=function(){this._tableImplementor&&this._tableImplementor.dispose(),this.matrix.onRenderedTableCreatedCallback=void 0,this.matrix.onRenderedTableResetCallback=void 0,this.matrix.onAddColumn=void 0,e.prototype.dispose.call(this)},t}(R),Y=function(e){function t(t){return e.call(this,t)||this}return J(t,e),t.prototype.createRenderedTable=function(){return new Z(this)},t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new X(this)},t.prototype.dispose=function(){e.prototype.dispose.call(this),this._implementor.dispose(),this._implementor=void 0},t}(s.QuestionMatrixDropdownModel),Z=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return J(t,e),t.prototype.createRenderedRow=function(e,t){void 0===t&&(t=!1);var n=new s.QuestionMatrixDropdownRenderedRow(e,t);return new c(n),n},t.prototype.createErrorRenderedRow=function(t){var n=e.prototype.createErrorRenderedRow.call(this,t);return new c(n),n},t}(s.QuestionMatrixDropdownRenderedTable);s.Serializer.overrideClassCreator("matrixdropdown",(function(){return new Y("")})),s.QuestionFactory.Instance.registerQuestion("matrixdropdown",(function(e){var t=new Y(e);return t.choices=[1,2,3,4,5],t.rows=s.QuestionFactory.DefaultRows,s.QuestionMatrixDropdownModelBase.addDefaultColumns(t),t}));var ee=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),te=function(e){function t(t){var n=e.call(this,t)||this;return n.question.getKoPopupIsVisible=n.getKoPopupIsVisible,n}return ee(t,e),t.prototype.addRow=function(){this.question.addRowUI()},t.prototype.removeRow=function(e){this.question.removeRowUI(e)},t.prototype.getKoPopupIsVisible=function(e){return i.observable(e.isDetailPanelShowing)},t.prototype.dispose=function(){e.prototype.dispose.call(this),this.question.getKoPopupIsVisible=void 0},t}(X),ne=function(e){function t(t){return e.call(this,t)||this}return ee(t,e),t.prototype.createRenderedTable=function(){return new Z(this)},t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new te(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionMatrixDynamicModel);s.Serializer.overrideClassCreator("matrixdynamic",(function(){return new ne("")})),s.QuestionFactory.Instance.registerQuestion("matrixdynamic",(function(e){var t=new ne(e);return t.choices=[1,2,3,4,5],t.rowCount=2,s.QuestionMatrixDropdownModelBase.addDefaultColumns(t),t}));var oe=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ie=function(e){function t(t){var n=e.call(this,t)||this;n.koRecalc=i.observable(0),n.setCallbackFunc("koAddPanelClick",(function(){n.addPanel()})),n.setCallbackFunc("koRemovePanelClick",(function(e){n.removePanel(e)})),n.setCallbackFunc("koPrevPanelClick",(function(){n.question.goToPrevPanel()})),n.setCallbackFunc("koNextPanelClick",(function(){n.question.goToNextPanel()})),n.setObservaleObj("koCanAddPanel",i.pureComputed((function(){return n.koRecalc(),n.question.canAddPanel}))),n.setObservaleObj("koCanRemovePanel",i.pureComputed((function(){return n.koRecalc(),n.question.canRemovePanel}))),n.setObservaleObj("koIsPrevButton",i.pureComputed((function(){return n.koRecalc(),n.question.isPrevButtonVisible}))),n.setObservaleObj("koIsNextButton",i.pureComputed((function(){return n.koRecalc(),n.question.isNextButtonVisible}))),n.setObservaleObj("koIsRange",i.pureComputed((function(){return n.koRecalc(),n.question.isRangeShowing}))),n.setObservaleObj("koPanel",i.pureComputed((function(){return n.koRecalc(),n.question.currentPanel}))),n.setObservaleObj("koIsList",i.pureComputed((function(){return n.koRecalc(),n.question.isRenderModeList}))),n.setObservaleObj("koIsProgressTop",i.pureComputed((function(){return n.koRecalc(),n.question.isProgressTopShowing}))),n.setObservaleObj("koIsProgressBottom",i.pureComputed((function(){return n.koRecalc(),n.question.isProgressBottomShowing})));var o=i.observable(n.question.currentIndex);return o.subscribe((function(e){n.question.currentIndex=e})),n.setObservaleObj("koRangeValue",o),n.setObservaleObj("koRangeMax",i.pureComputed((function(){return n.koRecalc(),n.question.visiblePanelCount-1}))),n.setObservaleObj("koAddButtonCss",i.pureComputed((function(){return n.koRecalc(),n.question.getAddButtonCss()}))),n.setObservaleObj("koPrevButtonCss",i.pureComputed((function(){return n.koRecalc(),n.question.getPrevButtonCss()}))),n.setObservaleObj("koNextButtonCss",i.pureComputed((function(){return n.koRecalc(),n.question.getNextButtonCss()}))),n.setObservaleObj("koProgressText",i.pureComputed((function(){return n.koRecalc(),n.question.progressText}))),n.setObservaleObj("koProgress",i.pureComputed((function(){return n.koRecalc(),n.question.progress}))),n.setCallbackFunc("koPanelAfterRender",(function(e,t){n.panelAfterRender(e,t)})),n.question.panelCountChangedCallback=function(){n.onPanelCountChanged()},n.question.renderModeChangedCallback=function(){n.onRenderModeChanged()},n.question.currentIndexChangedCallback=function(){n.onCurrentIndexChanged()},n}return oe(t,e),t.prototype.onPanelCountChanged=function(){this.onCurrentIndexChanged()},t.prototype.onRenderModeChanged=function(){this.onCurrentIndexChanged()},t.prototype.onCurrentIndexChanged=function(){this.question.isDisposed||(this.koRecalc(this.koRecalc()+1),this.question.koRangeValue(this.question.currentIndex))},t.prototype.addPanel=function(){this.question.addPanelUI()},t.prototype.removePanel=function(e){this.question.isRenderModeList||(e=this.question.currentPanel),this.question.removePanelUI(e)},t.prototype.panelAfterRender=function(e,t){if(this.question&&this.question.survey){var n=s.SurveyElement.GetFirstNonTextElement(e);this.question.survey.afterRenderPanel(t,n)}},t.prototype.dispose=function(){this.question.panelCountChangedCallback=void 0,this.question.renderModeChangedCallback=void 0,this.question.currentIndexChangedCallback=void 0,e.prototype.dispose.call(this)},t}(R),se=function(e){function t(t){return e.call(this,t)||this}return oe(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new ie(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionPanelDynamicModel);s.Serializer.overrideClassCreator("paneldynamic",(function(){return new se("")})),s.QuestionFactory.Instance.registerQuestion("paneldynamic",(function(e){return new se(e)}));var ae=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),re=function(e){function t(t){var n=e.call(this,t)||this;return n.setCallbackFunc("koOnFocus",(function(e,t){return n.question.onFocus(t),!0})),n.setCallbackFunc("koOnBlur",(function(e,t){return n.question.onBlur(t),!0})),n.setCallbackFunc("koOnKeyDown",(function(e,t){return n.question.onKeyDown(t),!0})),n.setCallbackFunc("koOnKeyUp",(function(e,t){return n.question.onKeyUp(t),!0})),n.setCallbackFunc("koOnChange",(function(e,t){return n.question.onChange(t),!0})),n.setCallbackFunc("koOnCompositeUpdate",(function(e,t){return n.question.onCompositionUpdate(t),!0})),n.setObservaleObj("koReadOnlyValue",i.computed((function(){return n.question.inputValue}))),n}return ae(t,e),t}(R),ce=function(e){function t(t){return e.call(this,t)||this}return ae(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new re(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionTextModel);s.Serializer.overrideClassCreator("text",(function(){return new ce("")})),s.QuestionFactory.Instance.registerQuestion("text",(function(e){return new ce(e)}));var le=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),de=function(e){function t(t){return e.call(this,t)||this}return le(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new re(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.MultipleTextEditorModel),ue=function(e){function t(t,n){return void 0===t&&(t=null),void 0===n&&(n=null),e.call(this,t,n)||this}return le(t,e),t.prototype.createEditor=function(e){return new de(e)},t}(s.MultipleTextItemModel),pe=function(e){function t(t){var n=e.call(this,t)||this;return n.koRecalc=i.observable(0),n.setObservaleObj("koItemCss",i.pureComputed((function(){return n.koRecalc(),n.question.getItemCss()}))),n.setObservaleObj("koItemTitleCss",i.pureComputed((function(){return n.koRecalc(),n.question.getItemTitleCss()}))),n}return le(t,e),t}(R),me=function(e){function t(t){return e.call(this,t)||this}return le(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new pe(this)},t.prototype.onRowCreated=function(e){return new c(e),e},t.prototype.createTextItem=function(e,t){return new ue(e,t)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,this.koRows=void 0,e.prototype.dispose.call(this)},t}(s.QuestionMultipleTextModel);s.Serializer.overrideClassCreator("multipletextitem",(function(){return new ue("")})),s.Serializer.overrideClassCreator("multipletext",(function(){return new me("")})),s.QuestionFactory.Instance.registerQuestion("multipletext",(function(e){var t=new me(e);return s.QuestionMultipleTextModel.addDefaultItems(t),t}));var xe=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ve=function(e){function t(t){return e.call(this,t)||this}return xe(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new O(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionRadiogroupModel);s.Serializer.overrideClassCreator("radiogroup",(function(){return new ve("")})),s.QuestionFactory.Instance.registerQuestion("radiogroup",(function(e){var t=new ve(e);return t.choices=s.QuestionFactory.DefaultChoices,t}));var fe=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ke=function(e){function t(t){var n=e.call(this,t)||this;return n.onCreated(),n}return fe(t,e),t.prototype.onCreated=function(){},t}(R),ye=function(e){function t(t){return e.call(this,t)||this}return fe(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new ke(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionRatingModel);s.Serializer.overrideClassCreator("rating",(function(){return new ye("")})),s.QuestionFactory.Instance.registerQuestion("rating",(function(e){return new ye(e)}));var he=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),be=function(e){function t(t){return e.call(this,t)||this}return he(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.onSwitchClick=function(t,n){return e.prototype.onSwitchClickModel.call(this,Object(s.getOriginalEvent)(n))},t.prototype.onTrueLabelClick=function(e,t){return this.onLabelClick(t,!this.swapOrder)},t.prototype.onFalseLabelClick=function(e,t){return this.onLabelClick(t,this.swapOrder)},t.prototype.onKeyDown=function(e,t){return this.onKeyDownCore(t)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionBooleanModel);s.Serializer.overrideClassCreator("boolean",(function(){return new be("")})),s.QuestionFactory.Instance.registerQuestion("boolean",(function(e){return new be(e)}));var ge=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),qe=function(e){function t(t){return e.call(this,t)||this}return ge(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionEmptyModel);s.Serializer.overrideClassCreator("empty",(function(){return new qe("")}));var Ce=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),we=function(e){function t(t){return e.call(this,t)||this}return Ce(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionExpressionModel);s.Serializer.overrideClassCreator("expression",(function(){return new we("")})),s.QuestionFactory.Instance.registerQuestion("expression",(function(e){return new we(e)}));var _e=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Re=function(e){function t(t){var n=e.call(this,t)||this;return n.question=t,n.koRecalc=i.observable(0),n.setCallbackFunc("koGetItemClass",(function(e){return n.koRecalc(),t.getItemClass(e)})),n.question.registerFunctionOnPropertyValueChanged("value",(function(){n.question.multiSelect&&n.question.isDesignMode&&n.koRecalc(n.koRecalc()+1)}),"__koOnValueChangeTrigger"),n}return _e(t,e),t.prototype.getKoValue=function(){return this.question.renderedValue},t.prototype.dispose=function(){this.question.unRegisterFunctionOnPropertyValueChanged("value","__koOnValueChangeTrigger"),e.prototype.dispose.call(this)},t}(O),Ie=function(e){function t(t){return e.call(this,t)||this}return _e(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new Re(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionImagePickerModel);s.Serializer.overrideClassCreator("imagepicker",(function(){return new Ie("")})),s.QuestionFactory.Instance.registerQuestion("imagepicker",(function(e){return new Ie(e)}));var Te=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Oe=function(e){function t(t){return e.call(this,t)||this}return Te(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionImageModel);s.Serializer.overrideClassCreator("image",(function(){return new Oe("")})),s.QuestionFactory.Instance.registerQuestion("image",(function(e){return new Oe(e)}));var $e=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Se=function(e){function t(t){return e.call(this,t)||this}return $e(t,e),t.prototype.koOnBlur=function(e,t){return this.onBlur(t)},t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionSignaturePadModel);s.Serializer.overrideClassCreator("signaturepad",(function(){return new Se("")})),s.QuestionFactory.Instance.registerQuestion("signaturepad",(function(e){return new Se(e)}));var Me=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),De=function(e){function t(t,n){return e.call(this,t,n)||this}return Me(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionCustomModel),Pe=function(e){function t(t,n){return e.call(this,t,n)||this}return Me(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new R(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionCompositeModel);s.ComponentCollection.Instance.onCreateCustom=function(e,t){return new De(e,t)},s.ComponentCollection.Instance.onCreateComposite=function(e,t){return new Pe(e,t)};var Be=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Ee=function(e){function t(t){return e.call(this,t)||this}return Be(t,e),t.prototype.onBaseCreating=function(){e.prototype.onBaseCreating.call(this),this._implementor=new O(this)},t.prototype.dispose=function(){this._implementor.dispose(),this._implementor=void 0,e.prototype.dispose.call(this)},t}(s.QuestionButtonGroupModel),Ve=n(46);i.components.register("sv-action",{viewModel:{createViewModel:function(e){var t=e.item;return new c(t),e}},template:Ve});var Ae=n(47);i.components.register("sv-action-bar-item",{viewModel:{createViewModel:function(e){return e}},template:Ae});var Le=n(48);i.components.register("sv-action-bar-item-dropdown",{viewModel:{createViewModel:function(e){return{model:new s.ActionDropdownViewModel(e.item),getTarget:s.getActionDropdownButtonTarget}}},template:Le});var Ne=n(49);i.components.register("sv-action-bar-separator",{viewModel:{createViewModel:function(e,t){var n=e.item;return n?{css:n.innerCss}:{}}},template:Ne});var He=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),je=n(45),Fe=function(e){function t(t,n){void 0===n&&(n=!0);var o=e.call(this,t)||this;return o.model=t,o.handleClick=n,o.itemsSubscription=i.computed((function(){(t.renderedActions||t.items||t.actions).forEach((function(e){e.stateItem?new c(e.stateItem):new c(e)}))})),o}return He(t,e),t.prototype.dispose=function(){e.prototype.dispose.call(this),this.itemsSubscription.dispose(),this.model.resetResponsivityManager()},t}(c);i.components.register("sv-action-bar",{viewModel:{createViewModel:function(e,t){var n=void 0===e.handleClick||e.handleClick,o=e.model,i=t.element.nextElementSibling;return e.model.initResponsivityManager(i),new Fe(o,n)}},template:je});var We=n(50);i.components.register("sv-boolean-checkbox",{viewModel:{createViewModel:function(e,t){return{question:e.question}}},template:We}),s.RendererFactory.Instance.registerRenderer("boolean","checkbox","sv-boolean-checkbox");var Qe=n(51);i.components.register("sv-boolean-radio-item",{viewModel:{createViewModel:function(e){return e.handleChange=function(){e.question.booleanValue=e.value},e}},template:Qe});var ze=n(52);i.components.register("sv-boolean-radio",{viewModel:{createViewModel:function(e,t){return{question:e.question}}},template:ze}),s.RendererFactory.Instance.registerRenderer("boolean","radio","sv-boolean-radio");var Ue=n(53),Ke=function(e,t){this.question=e,this.targetElement=t};i.components.register("sv-panel",{viewModel:{createViewModel:function(e,t){return new Ke(e.question,t.element.parentElement)}},template:Ue});var Ge=n(54),Je=function(){function e(e){var t=this;this.popupViewModel=e,this.visibilityChangedHandler=function(e,n){n.isVisible&&(i.tasks.runEarly(),t.popupViewModel.updateOnShowing())},this._popupModelImplementor=new c(e.model),this._popupImplementor=new c(e),e.onVisibilityChanged.add(this.visibilityChangedHandler)}return e.prototype.dispose=function(){this._popupModelImplementor.dispose(),this._popupModelImplementor=void 0,this._popupImplementor.dispose(),this._popupImplementor=void 0,this.popupViewModel.resetComponentElement(),this.popupViewModel.onVisibilityChanged.remove(this.visibilityChangedHandler),this.popupViewModel.dispose(),this.visibilityChangedHandler=void 0},e}();function Xe(e,t,n,o,i,a,r,c){return void 0===r&&(r="popup"),Ye(Object(s.createDialogOptions)(e,t,n,o,void 0,void 0,i,a,r),c)}function Ye(e,t){var n=Object(s.createPopupModalViewModel)(e,t),o=function(e,t){t.isVisible||(n.onVisibilityChanged.remove(o),i.cleanNode(n.container),n.container.remove(),n.dispose(),a.dispose())};n.onVisibilityChanged.add(o);var a=new Je(n);return n.container.innerHTML=Ge,i.applyBindings(a,n.container),n.model.isVisible=!0,n}s.settings.showModal=Xe,s.settings.showDialog=Ye,i.components.register("sv-popup",{viewModel:{createViewModel:function(e,t){var n=t.element.nodeType===Node.COMMENT_NODE?t.element.nextElementSibling:t.element,o=Object(s.createPopupViewModel)(i.unwrap(e.model));return o.setComponentElement(n,e.getTarget?e.getTarget(n):void 0,e.getArea?e.getArea(n):void 0),new Je(o)}},template:Ge});var Ze=n(55),et=function(){function e(e,t,n,o){void 0===n&&(n="center"),this.model=e,this.element=t,this.container=n,this.survey=o,this.hasScroller=i.observable(!1),this.canShowHeader=i.observable(!1),this.canShowFooter=i.observable(!1),this.canShowItemTitles=i.observable(!0),this.respManager=new s.ProgressButtonsResponsivityManager(e,t,this)}return e.prototype.onResize=function(e){this.canShowItemTitles(e),this.canShowHeader(!this.canShowItemTitles())},e.prototype.onUpdateScroller=function(e){this.hasScroller(e)},e.prototype.onUpdateSettings=function(){this.canShowItemTitles(this.model.showItemTitles),this.canShowFooter(!this.model.showItemTitles)},e.prototype.getScrollButtonCss=function(e){return this.model.getScrollButtonCss(this.hasScroller(),e)},e.prototype.clickScrollButton=function(e,t){e.scrollLeft+=70*(t?-1:1)},e.prototype.dispose=function(){this.respManager.dispose()},e}();i.components.register("sv-progress-buttons",{viewModel:{createViewModel:function(e,t){var n=new et(e.model,t.element.nextElementSibling,e.container,e.survey);return setTimeout((function(){var t;return null===(t=e.model)||void 0===t?void 0:t.processResponsiveness(0)}),10),n}},template:Ze});var tt=n(56),nt=function(){function e(e,t){void 0===t&&(t="header"),this.model=e,this.container=t}return e.prototype.getProgressTextInBarCss=function(e){return s.SurveyProgressModel.getProgressTextInBarCss(e)},e.prototype.getProgressTextUnderBarCss=function(e){return s.SurveyProgressModel.getProgressTextUnderBarCss(e)},e.prototype.getProgressCssClasses=function(){return this.model.getProgressCssClasses(this.container)},e}();i.components.register("sv-progress-progress",{viewModel:{createViewModel:function(e){return new nt(e.model,e.container)}},template:tt});var ot="\x3c!-- ko component: { name: 'sv-progress-progress', params: $data } --\x3e\x3c!-- /ko --\x3e";i.components.register("sv-progress-pages",{viewModel:{createViewModel:function(e){return new nt(e.model,e.container)}},template:ot}),i.components.register("sv-progress-questions",{viewModel:{createViewModel:function(e){return new nt(e.model,e.container)}},template:ot}),i.components.register("sv-progress-correctquestions",{viewModel:{createViewModel:function(e){return new nt(e.model,e.container)}},template:ot}),i.components.register("sv-progress-requiredquestions",{viewModel:{createViewModel:function(e){return new nt(e.model,e.container)}},template:ot});var it=n(57);i.components.register("sv-navigation-toc",{viewModel:{createViewModel:function(e,t){return{tocModel:e.model}}},template:it});var st=n(58),at=function(){function e(e,t,n){void 0===n&&(n=!0),this.survey=e,this.container=t,this.needRenderWrapper=n,this.css="sv-components-column"}return Object.defineProperty(e.prototype,"components",{get:function(){return this.survey.getContainerContent(this.container)},enumerable:!1,configurable:!0}),e}();i.components.register("sv-components-container",{viewModel:{createViewModel:function(e){var t=e.survey;return new at(t,e.container,e.needRenderWrapper)}},template:st});var rt=n(59);i.components.register(s.SurveyModel.TemplateRendererComponentName,{viewModel:{createViewModel:function(e){return e}},template:rt}),i.components.register("survey-element-title",{viewModel:{createViewModel:function(e,t){var n=e.element,o=t.element,i=document.createElement(n.titleTagName),s="css: element.cssTitle, attr: { "+(n.titleAriaLabel?"'aria-label': element.titleAriaLabel,":"")+" id: element.ariaTitleId, tabindex: element.titleTabIndex, 'aria-expanded': element.titleAriaExpanded, role: element.titleAriaRole }";n.hasTitleEvents&&(s+=", key2click"),i.setAttribute("data-bind",s),i.innerHTML="\x3c!-- ko component: { name: 'sv-title-actions', params: {element: element } } --\x3e\x3c!-- /ko --\x3e";var a=o.nextSibling;return o.parentNode.insertBefore(document.createComment(" ko if: element.hasTitle "),a),o.parentNode.insertBefore(i,a),o.parentNode.insertBefore(document.createComment(" /ko "),a),o.parentNode.removeChild(a),{element:n}}},template:"<span></span>"});var ct=n(60);i.components.register("survey-element-title-content",{viewModel:{createViewModel:function(e,t){return{element:e.element}}},template:ct});var lt=n(61);i.components.register("sv-title-actions",{viewModel:{createViewModel:function(e,t){var n=e.element;return{element:n,toolbar:n.getTitleToolbar()}}},template:lt}),s.RendererFactory.Instance.registerRenderer("element","title-actions","sv-title-actions");var dt=n(62),ut=function(){function e(e){this.locString=e}return Object.defineProperty(e.prototype,"koHasHtml",{get:function(){return this.locString.koHasHtml()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"editValue",{get:function(){return this.locString.koRenderedHtml()},set:function(e){this.locString.searchElement=void 0,this.locString.text=e},enumerable:!1,configurable:!0}),e.prototype.onInput=function(e,t){e.editValue=t.target.innerText},e.prototype.onClick=function(e,t){t.stopPropagation()},e.prototype.dispose=function(){this.locString.onSearchChanged=void 0},e}();function pt(e,t){for(;e.childNodes.length>1;)e.removeChild(e.childNodes[1]);e.childNodes[0].textContent=t.renderedHtml}i.components.register(s.LocalizableString.editableRenderer,{viewModel:{createViewModel:function(e,t){var n=e.locString;return function(e,t){t.onSearchChanged=function(){if(null==t.searchElement&&(t.searchElement=function(e){for(;e&&"SPAN"!==e.nodeName;){var t=e.parentElement.getElementsByClassName("sv-string-editor");e=t.length>0?t[0]:void 0}return e&&e.childNodes.length>0?e:null}(e)),null!=t.searchElement){var n=t.searchElement;if(t.highlightDiv||(t.highlightDiv=document.createElement("span"),t.highlightDiv.style.backgroundColor="lightgray"),null!=t.searchIndex){pt(n,t);var o=document.createRange();o.setStart(n.childNodes[0],t.searchIndex),o.setEnd(n.childNodes[0],t.searchIndex+t.searchText.length),o.surroundContents(t.highlightDiv)}else pt(n,t),t.searchElement=void 0}}}(t.element,n),new ut(n)}},template:dt});var mt=n(63);i.components.register("sv-string-viewer",{viewModel:{createViewModel:function(e,t){return{locString:e.locString}}},template:mt});var xt=n(64);i.components.register("sv-logo-image",{viewModel:{createViewModel:function(e){return{survey:e}}},template:xt});var vt=n(65);i.components.register("sv-skeleton",{viewModel:{createViewModel:function(e,t){return{element:e.element}}},template:vt});var ft=n(66);i.components.register("sv-character-counter",{viewModel:{createViewModel:function(e,t){var n=e.counter,o=e.remainingCharacterCounter;return new c(n),{counter:n,remainingCharacterCounter:o}}},template:ft});var kt=n(68);i.components.register("sv-rating-dropdown-item",{viewModel:{createViewModel:function(e,t){return new c(e.item),{item:e.item,description:e.item.description}}},template:kt});var yt=n(67);i.components.register("sv-rating-dropdown",{viewModel:{createViewModel:function(e,t){return{question:e.question}}},template:yt}),s.RendererFactory.Instance.registerRenderer("rating","dropdown","sv-rating-dropdown");var ht=n(69);i.components.register("sv-rating-item",{viewModel:{createViewModel:function(e,t){return new c(e.item),{question:e.question,item:e.item,index:e.index}}},template:ht});var bt=n(70);i.components.register("sv-rating-item-star",{viewModel:{createViewModel:function(e,t){return new c(e.item),{question:e.question,item:e.item,index:e.index}}},template:bt});var gt=n(71);i.components.register("sv-rating-item-smiley",{viewModel:{createViewModel:function(e,t){return new c(e.item),{question:e.question,item:e.item,index:e.index}}},template:gt});var qt=n(72);i.components.register("sv-dropdown",{viewModel:{createViewModel:function(e,t){var n=e.question;return new c(n.dropdownListModel),{question:n,model:n.dropdownListModel,click:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.onClick(t)},clear:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.onClear(t)},keyhandler:function(e,t){var o;return null===(o=n.dropdownListModel)||void 0===o||o.keyHandler(t),!0},blur:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.onBlur(t)},focus:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.onFocus(t)},chevronPointerDown:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.chevronPointerDown(t)}}}},template:qt});var Ct=n(73);i.components.register("sv-dropdown-select",{viewModel:{createViewModel:function(e,t){e.question.choices.forEach((function(e){new c(e)}));return{question:e.question,click:function(t,n){e.question.onClick(n)},keyup:function(t,n){e.question.onKeyUp(n)}}}},template:Ct}),s.RendererFactory.Instance.registerRenderer("dropdown","select","sv-dropdown-select");var wt=n(74);i.components.register("sv-tagbox-item",{viewModel:{createViewModel:function(e,t){var n=e.item;return new c(n),{item:n,question:e.question,removeItem:function(e,t){e.question.dropdownListModel.deselectItem(e.item.value),t.stopPropagation()}}}},template:wt});var _t=n(75);i.components.register("sv-tagbox",{viewModel:{createViewModel:function(e,t){var n=e.question;return n.dropdownListModel||(n.dropdownListModel=new s.DropdownMultiSelectListModel(n)),new c(n.dropdownListModel),{question:n,model:n.dropdownListModel,click:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.onClick(t)},clear:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.onClear(t)},keyhandler:function(e,t){var o;return null===(o=n.dropdownListModel)||void 0===o||o.keyHandler(t),!0},blur:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.onBlur(t)},focus:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.onFocus(t)},inputKeyHandler:function(e,t){var o;return null===(o=n.dropdownListModel)||void 0===o||o.inputKeyHandler(t),!0},chevronPointerDown:function(e,t){var o;null===(o=n.dropdownListModel)||void 0===o||o.chevronPointerDown(t)}}}},template:_t});var Rt=n(76);i.components.register("sv-header-cell",{viewModel:{createViewModel:function(e,t){return e.model}},template:Rt});var It=n(77);i.components.register("sv-header-mobile",{viewModel:{createViewModel:function(e,t){return e.model}},template:It});var Tt=n(78);i.components.register("sv-header",{viewModel:{createViewModel:function(e,t){return e.model.survey=e.survey,new c(e.model),e}},template:Tt});var Ot=n(79);i.components.register("sv-file-choose-btn",{viewModel:{createViewModel:function(e,t){return e}},template:Ot});var $t=n(80);i.components.register("sv-file-preview",{viewModel:{createViewModel:function(e,t){return e}},template:$t});var St=n(82);i.components.register("sv-list-item",{viewModel:{createViewModel:function(e,t){return new c(e.item),{item:e.item,model:e.model,disableTabStop:e.item.disableTabStop,itemClick:function(e,t){e.model.onItemClick(e.item),t.stopPropagation()},hover:function(e,t){"mouseover"===e.type&&t.model.onItemHover(t.item)},leave:function(e,t){t.model.onItemLeave(t.item)}}}},template:St});var Mt=n(83);i.components.register("sv-list-item-content",{viewModel:{createViewModel:function(e,t){return new c(e.item),{item:e.item,model:e.model}}},template:Mt});var Dt=n(84);i.components.register("sv-list-item-group",{viewModel:{createViewModel:function(e){return new c(e.item),{item:e.item,model:e.model,disableTabStop:e.item.disableTabStop,itemClick:function(e,t){e.model.onItemClick(e.item),t.stopPropagation()}}}},template:Dt});var Pt=n(81);i.components.register("sv-list",{viewModel:{createViewModel:function(e,t){var n=e.model,o=new Fe(n);return n.initListContainerHtmlElement(t.element),{model:n,dispose:function(){o.dispose(),n.initListContainerHtmlElement(void 0)},afterItemRender:function(e,t){i.tasks&&i.tasks.runEarly(),n.onLastItemRended(t)}}}},template:Pt});var Bt=n(85);i.components.register("sv-svg-icon",{viewModel:{createViewModel:function(e,t){return i.computed((function(){var n=i.unwrap(e.iconName),o=t.element.querySelector&&t.element.querySelector("svg")||t.element.nextElementSibling;n&&Object(s.createSvg)(i.unwrap(e.size),i.unwrap(e.width),i.unwrap(e.height),n,o,i.unwrap(e.title))})),{hasIcon:e.iconName,css:e.css,title:e.title}}},template:Bt});var Et=n(86);i.components.register("sv-matrix-remove-button",{viewModel:{createViewModel:function(e){return e.item.data}},template:Et});var Vt=n(87);i.components.register("sv-matrix-detail-button",{viewModel:{createViewModel:function(e,t){return e.item.data}},template:Vt});var At=n(88);i.components.register("sv-matrix-drag-drop-icon",{viewModel:{createViewModel:function(e,t){return e.item.data}},template:At});var Lt=n(89),Nt=function(e){this.model=e};i.components.register("sv-button-group-item",{viewModel:{createViewModel:function(e){var t=new s.ButtonGroupItemModel(e.question,e.item,e.index());return new Nt(t)}},template:Lt});var Ht=n(90);i.components.register("sv-nav-btn",{viewModel:{createViewModel:function(e,t){return e}},template:Ht});var jt=n(91),Ft=n(92),Wt=n(93),Qt=n(94),zt=n(95);i.components.register("sv-paneldynamic-add-btn",{viewModel:{createViewModel:function(e,t){return!!e.item&&e.item.data||e}},template:jt}),i.components.register("sv-paneldynamic-next-btn",{viewModel:{createViewModel:function(e,t){return!!e.item&&e.item.data||e}},template:Ft}),i.components.register("sv-paneldynamic-prev-btn",{viewModel:{createViewModel:function(e,t){return!!e.item&&e.item.data||e}},template:Wt}),i.components.register("sv-paneldynamic-progress-text",{viewModel:{createViewModel:function(e,t){return!!e.item&&e.item.data||e}},template:Qt}),i.components.register("sv-paneldynamic-remove-btn",{viewModel:{createViewModel:function(e,t){return!!e.item&&e.item.data||e}},template:zt});var Ut=n(96);i.components.register("sv-brand-info",{viewModel:{createViewModel:function(e,t){return{}}},template:Ut});var Kt=n(97);i.components.register("sv-question-error",{viewModel:{createViewModel:function(e,t){return e}},template:Kt});var Gt=n(98);i.components.register("sv-notifier",{viewModel:{createViewModel:function(e,t){return new c(e.notifier),e}},template:Gt});var Jt=n(99);i.components.register("sv-loading-indicator",{viewModel:{createViewModel:function(e,t){}},template:Jt}),i.components.register("sv-svg-bundle",{viewModel:{createViewModel:function(e,t){return(t.element.querySelector&&t.element.querySelector("svg")||t.element.nextElementSibling).innerHTML=s.SvgRegistry.iconsRenderedHtml(),e}},template:"<svg id='sv-icon-holder-global-container' style=\"display:none\"></svg>"}),function(e,t){e.surveyTemplateEngine=function(){},e.surveyTemplateEngine.prototype=new e.nativeTemplateEngine,e.surveyTemplateEngine.prototype.makeTemplateSource=function(n,o){if("string"==typeof n){var i,r=(o=o||document).getElementById("survey-content-"+t);if(!r){var c=s.settings.environment.rootElement;(r=document.createElement("div")).id="survey-content-"+s.SurveyModel.platform,r.style.display="none",r.innerHTML=a,c.appendChild(r)}for(var l=0;l<r.children.length;l++)if(r.children[l].id===n){i=r.children[l];break}return i||(i=o.getElementById(n)),i?new e.templateSources.domElement(i):(new e.nativeTemplateEngine).makeTemplateSource(n,o)}if(1===n.nodeType||8===n.nodeType)return new e.templateSources.anonymousTemplate(n);throw new Error("Unknown template type: "+n)};var n=new e.surveyTemplateEngine;e.setTemplateEngine(n)}(i,s.SurveyModel.platform),Object(s.checkLibraryVersion)("1.11.2","survey-knockout-ui")}])}));